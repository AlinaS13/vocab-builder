{"version":3,"file":"static/js/784.dace1d92.chunk.js","mappings":"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","sources":["webpack://vocab-builder/./src/pages/trainitgPage/TrainingPage.module.scss?9c31","webpack://vocab-builder/./src/components/trainingRoom/TrainingRoom.module.scss?c2ad","webpack://vocab-builder/./src/components/wellDoneModal/WellDoneModal.module.scss?f97e","components/wellDoneModal/WellDoneModal.jsx","webpack://vocab-builder/./src/components/circularProgress/CircularProgress.module.scss?668c","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js","../node_modules/@mui/material/Box/Box.js","components/circularProgress/CircularProgress.jsx","components/trainingRoom/TrainingRoom.jsx","pages/trainitgPage/TrainingPage.jsx","redux/words/wordsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trainingPageContainer\":\"TrainingPage_trainingPageContainer__zA9rI\",\"trainingWelcomeContainer\":\"TrainingPage_trainingWelcomeContainer__81PC0\",\"trainingСontentWrp\":\"TrainingPage_trainingСontentWrp__ci+cT\",\"trainingСontentBox\":\"TrainingPage_trainingСontentBox__xM8o9\",\"trainingPageImg\":\"TrainingPage_trainingPageImg__5JYbu\",\"buttonWrp\":\"TrainingPage_buttonWrp__bFqUj\",\"addButton\":\"TrainingPage_addButton__j6SO8\",\"cancelButton\":\"TrainingPage_cancelButton__SxTR-\"};","// extracted by mini-css-extract-plugin\nexport default {\"progressCircularWrp\":\"TrainingRoom_progressCircularWrp__UTriA\",\"trainingRoomWrp\":\"TrainingRoom_trainingRoomWrp__yoMQc\",\"trainingTextariaWrp\":\"TrainingRoom_trainingTextariaWrp__EFXtO\",\"trainingTextarea\":\"TrainingRoom_trainingTextarea__fuPUj\",\"trainingTask\":\"TrainingRoom_trainingTask__iMIjy\",\"translateLanguageMarkerWrp\":\"TrainingRoom_translateLanguageMarkerWrp__VoV34\",\"nextBtn\":\"TrainingRoom_nextBtn__QNizs\",\"trainingTaskWord\":\"TrainingRoom_trainingTaskWord__sRQ8p\",\"actionTasksButtonsWrp\":\"TrainingRoom_actionTasksButtonsWrp__g8UO9\",\"saveTaskButton\":\"TrainingRoom_saveTaskButton__ZecjF\",\"cancelTaskLink\":\"TrainingRoom_cancelTaskLink__6JgqA\",\"languageTitle\":\"TrainingRoom_languageTitle__0T9al\",\"translateLanguageMarker\":\"TrainingRoom_translateLanguageMarker__p6RB8\",\"taskLanguageMarker\":\"TrainingRoom_taskLanguageMarker__2YV1M\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"WellDoneModal_modalOverlay__wtWff\",\"modalContainer\":\"WellDoneModal_modalContainer__6BNiu\",\"modalCloseButton\":\"WellDoneModal_modalCloseButton__oQmod\",\"modalCloseSvg\":\"WellDoneModal_modalCloseSvg__Oa2C5\",\"modalTitle\":\"WellDoneModal_modalTitle__+jQtN\",\"resultWrp\":\"WellDoneModal_resultWrp__4CiQu\",\"resultTitle\":\"WellDoneModal_resultTitle__uUmtz\",\"resultList\":\"WellDoneModal_resultList__f0aId\",\"resultImg\":\"WellDoneModal_resultImg__vGlta\"};","import { useEffect } from \"react\";\r\nimport styles from \"./WellDoneModal.module.scss\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport book from \"../../assets/img/book.png\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nexport const WellDoneModal = ({ isOpen, onClose, answers }) => {\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  const correctAnswers = answers.filter((answer) => answer.isDone === true);\r\n  const mistakes = answers.filter((answer) => answer.isDone === false);\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={onClose}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={styles.modalCloseButton}\r\n          onClick={onClose}\r\n        >\r\n          <RxCross2 color=\"#ffffff\" className={styles.modalCloseSvg} />\r\n        </button>\r\n        <h2 className={styles.modalTitle}>Well done</h2>\r\n        <div className={styles.resultWrp}>\r\n          <div>\r\n            <h3 className={styles.resultTitle}>Сorrect answers:</h3>\r\n            <ul className={styles.resultList}>\r\n              {correctAnswers?.length > 0 &&\r\n                correctAnswers.map((answer) => {\r\n                  return (\r\n                    <li key={nanoid()}>\r\n                      <p>{answer.ua}</p>\r\n                    </li>\r\n                  );\r\n                })}\r\n              {correctAnswers?.length > 0 &&\r\n                correctAnswers.map((answer) => {\r\n                  return (\r\n                    <li key={nanoid()}>\r\n                      <p>{answer.en}</p>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3 className={styles.resultTitle}>Mistakes:</h3>\r\n            <ul className={styles.resultList}>\r\n              {mistakes?.length > 0 &&\r\n                mistakes.map((mistake) => {\r\n                  return (\r\n                    <li key={nanoid()}>\r\n                      <p>{mistake.ua}</p>\r\n                    </li>\r\n                  );\r\n                })}\r\n              {mistakes?.length > 0 &&\r\n                mistakes.map((mistake) => {\r\n                  return (\r\n                    <li key={nanoid()}>\r\n                      <p>{mistake.en}</p>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <img src={book} alt={book} className={styles.resultImg} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"progressCircular\":\"CircularProgress_progressCircular__xpdxB\",\"progressValue\":\"CircularProgress_progressValue__ofpGx\",\"progressCircul\":\"CircularProgress_progressCircul__vz2bO\"};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet cache;\nif (typeof document === 'object') {\n  cache = createCache({\n    key: 'css',\n    prepend: true\n  });\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import * as React from \"react\";\r\nimport styles from \"./CircularProgress.module.scss\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { selectTasksCount } from \"../../redux/words/wordsSelector\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { StyledEngineProvider } from \"@mui/material/styles\";\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  const [circleSize, setCircleSize] = React.useState({\r\n    width: \"58px\",\r\n    height: \"58px\",\r\n  });\r\n  React.useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth <= 375) {\r\n        setCircleSize({ width: \"44px\", height: \"44px\" });\r\n      } else {\r\n        setCircleSize({ width: \"58px\", height: \"58px\" });\r\n      }\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <Box\r\n        className={styles.progressCircular}\r\n        sx={{\r\n          position: \"relative\",\r\n          display: \"inline-flex\",\r\n        }}\r\n      >\r\n        <CircularProgress\r\n          className={styles.progressCircul}\r\n          style={{\r\n            color: \"#85aa9f\",\r\n            width: circleSize.width,\r\n            height: circleSize.height,\r\n          }}\r\n          variant=\"determinate\"\r\n          value={props.normalise(props.value)}\r\n        />\r\n        <Box\r\n          sx={{\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"caption\"\r\n            component=\"div\"\r\n            className={styles.progressValue}\r\n          >\r\n            {`${Math.round(props.progressCounterValue)}`}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n\r\nexport default function CircularWithValueLabel({ currentKey }) {\r\n  const taskValue = useSelector(selectTasksCount);\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  const progressCounterValue = taskValue - currentKey;\r\n  const normalise = (value) => ((value - 0) * 110) / (taskValue - 0);\r\n  React.useEffect(() => {\r\n    setProgress((prevProgress) =>\r\n      prevProgress >= taskValue ? 0 : prevProgress + currentKey\r\n    );\r\n  }, [currentKey, taskValue]);\r\n\r\n  return (\r\n    <StyledEngineProvider injectFirst>\r\n      <CircularProgressWithLabel\r\n        normalise={normalise}\r\n        value={currentKey}\r\n        progressCounterValue={progressCounterValue}\r\n      />\r\n    </StyledEngineProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./TrainingRoom.module.scss\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport ukraine from \"../../assets/img/ukraine.png\";\r\nimport united from \"../../assets/img/united.png\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAnsvers } from \"../../redux/words/wordsOperation\";\r\nimport { WellDoneModal } from \"../wellDoneModal/WellDoneModal\";\r\nimport { selectTasksAnswers } from \"../../redux/words/wordsSelector\";\r\nimport CircularWithValueLabel from \"../circularProgress/CircularProgress\";\r\n\r\nexport const TrainingRoom = ({ tasks }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const answers = useSelector(selectTasksAnswers);\r\n  const [isOpenWellDoneModal, setIsOpenWellDoneModal] = useState(false);\r\n  const [currentKey, setCurrentKey] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [currentWordObject, setCurrentWordObject] = useState(tasks[currentKey]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [currentTaskLanguage, setCurrentTaskLanguage] = useState(\"\");\r\n  const [currentLanguageFromTranslate, setCurrentLanguageFromTranslate] =\r\n    useState(\"\");\r\n  const [isLastTask, setIsLastTask] = useState(false);\r\n  const [submitRequested, setSubmitRequested] = useState(false);\r\n\r\n  const openWellDoneModal = () => setIsOpenWellDoneModal(true);\r\n\r\n  const closeWellDoneModal = () => {\r\n    navigate(\"/dictionary\");\r\n    setIsOpenWellDoneModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentWordObject(tasks[currentKey]);\r\n    setIsLastTask(currentKey === tasks.length - 1);\r\n  }, [tasks, currentKey]);\r\n\r\n  useEffect(() => {\r\n    console.log(currentWordObject);\r\n    if (currentWordObject) {\r\n      let currentTaskLanguage = currentWordObject.task === \"en\" ? \"en\" : \"ua\";\r\n      let currentLanguageFromTranslate =\r\n        currentWordObject.task === \"en\" ? \"ua\" : \"en\";\r\n      console.log(currentTaskLanguage);\r\n      setCurrentTaskLanguage(currentTaskLanguage);\r\n      setCurrentLanguageFromTranslate(currentLanguageFromTranslate);\r\n    }\r\n  }, [currentWordObject]);\r\n\r\n  useEffect(() => {\r\n    if (userAnswers.length > 0 && submitRequested === true) {\r\n      dispatch(addAnsvers(userAnswers));\r\n    }\r\n  }, [dispatch, userAnswers, submitRequested]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const saveAndSetNextWord = () => {\r\n    let value = inputValue ? inputValue : null;\r\n    const newAnswer = {\r\n      _id: currentWordObject._id,\r\n      task: currentTaskLanguage === \"en\" ? \"en\" : \"ua\",\r\n      en: currentWordObject.en ? currentWordObject.en : value,\r\n      ua: currentWordObject.ua ? currentWordObject.ua : value,\r\n    };\r\n\r\n    setUserAnswers([...userAnswers, newAnswer]);\r\n\r\n    setCurrentKey(currentKey + 1);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const handleSaveButtonClick = (e) => {\r\n    e.preventDefault();\r\n    if (!userAnswers || currentWordObject) {\r\n      let value = inputValue ? inputValue : null;\r\n      const newAnswer = {\r\n        _id: currentWordObject._id,\r\n        task: currentTaskLanguage === \"en\" ? \"en\" : \"ua\",\r\n        en: currentWordObject.en ? currentWordObject.en : value,\r\n        ua: currentWordObject.ua ? currentWordObject.ua : value,\r\n      };\r\n\r\n      setUserAnswers([...userAnswers, newAnswer]);\r\n      setSubmitRequested(true);\r\n    }\r\n    openWellDoneModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.progressCircularWrp}>\r\n        <CircularWithValueLabel currentKey={currentKey} />\r\n      </div>\r\n      <form onSubmit={handleSaveButtonClick}>\r\n        <div className={styles.trainingRoomWrp}>\r\n          <div className={styles.trainingTextariaWrp}>\r\n            <textarea\r\n              className={styles.trainingTextarea}\r\n              name=\"translation\"\r\n              rows=\"20\"\r\n              placeholder=\"Введіть переклад\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n            ></textarea>\r\n            <div className={styles.translateLanguageMarkerWrp}>\r\n              <div className={styles.translateLanguageMarker}>\r\n                <img\r\n                  src={currentTaskLanguage !== \"ua\" ? ukraine : united}\r\n                  alt={currentTaskLanguage !== \"ua\" ? ukraine : united}\r\n                />\r\n                <p className={styles.languageTitle}>\r\n                  {currentTaskLanguage !== \"ua\" ? \"Ukrainian\" : \"English\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.trainingTask}>\r\n              <p className={styles.trainingTaskWord}>\r\n                {currentWordObject[currentLanguageFromTranslate]}\r\n              </p>\r\n              <div className={styles.taskLanguageMarker}>\r\n                <img\r\n                  src={currentTaskLanguage === \"ua\" ? ukraine : united}\r\n                  alt={currentTaskLanguage === \"ua\" ? ukraine : united}\r\n                />\r\n                <p className={styles.languageTitle}>\r\n                  {currentTaskLanguage === \"ua\" ? \"Ukrainian\" : \"English\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              className={styles.nextBtn}\r\n              type=\"button\"\r\n              onClick={saveAndSetNextWord}\r\n              style={{ display: isLastTask ? \"none\" : \"inline-flex\" }}\r\n            >\r\n              Next <BsArrowRight color=\"#85AA9F\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={styles.actionTasksButtonsWrp}>\r\n          <button\r\n            className={styles.saveTaskButton}\r\n            // disabled={!isLastTask}\r\n            // type=\"submit\"\r\n            // onClick={handleSaveButtonClick}\r\n          >\r\n            Save\r\n          </button>\r\n          <NavLink to=\"/dictionary\" className={styles.cancelTaskLink}>\r\n            Cancel\r\n          </NavLink>\r\n        </div>\r\n        {isOpenWellDoneModal && (\r\n          <WellDoneModal\r\n            isOpen={isOpenWellDoneModal}\r\n            onClose={closeWellDoneModal}\r\n            answers={answers}\r\n          />\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import styles from \"./TrainingPage.module.scss\";\r\nimport report from \"../../assets/img/blood-report.png\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { openModalAddWord } from \"../../redux/words/wordsSlicе\";\r\n\r\nimport { isLoadingWords, selectTasks } from \"../../redux/words/wordsSelector\";\r\n\r\nimport { TrainingRoom } from \"../../components/trainingRoom/TrainingRoom\";\r\nimport { Loader } from \"../../components/loader/Loader\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { getTasks } from \"../../redux/words/wordsOperation\";\r\nimport { LogOutModal } from \"../../components/logOutModal/LogOutModal\";\r\nimport { selectIsModalOpen } from \"../../redux/auth/authSelector\";\r\nimport { openModalLogOut } from \"../../redux/auth/authSlicе\";\r\n\r\nconst TrainingPage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(selectTasks);\r\n  const isLoading = useSelector(isLoadingWords);\r\n  const isModalOpen = useSelector(selectIsModalOpen);\r\n\r\n  const openModalAddWordAndRedirect = () => {\r\n    dispatch(openModalAddWord());\r\n    navigate(\"/dictionary\");\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getTasks());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (tasks === null) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.trainingPageContainer}>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : tasks?.length > 0 ? (\r\n        <div className={styles.tasksContainer}>\r\n          <TrainingRoom tasks={tasks} />\r\n        </div>\r\n      ) : (\r\n        <div className={styles.trainingWelcomeContainer}>\r\n          <div className={styles.trainingСontentWrp}>\r\n            <div className={styles.trainingСontentBox}>\r\n              <h2>You don't have a single word to learn right now. </h2>\r\n              <p>\r\n                Please create or add a word to start the workout. We want to\r\n                improve your vocabulary and develop your knowledge, so please\r\n                share the words you are interested in adding to your study.\r\n              </p>\r\n              <div className={styles.buttonWrp}>\r\n                <button\r\n                  onClick={openModalAddWordAndRedirect}\r\n                  type=\"button\"\r\n                  className={styles.addButton}\r\n                >\r\n                  Add word\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={styles.cancelButton}\r\n                  onClick={() => dispatch(openModalLogOut())}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <img className={styles.trainingPageImg} src={report} alt={report} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isModalOpen && <LogOutModal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingPage;\r\n","export const selectAllWords = (state) => state.words.allWords;\r\n\r\nexport const selectCategories = (state) => state.words.categories;\r\n\r\nexport const selectStatistics = (state) => state.words.statistics;\r\n\r\nexport const selectUserWords = (state) => state.words.userWords;\r\n\r\nexport const isLoadingWords = (state) => state.words.isLoading;\r\n\r\nexport const selectIsModalAddWordOpen = (state) =>\r\n  state.words.isModalAddWordOpen;\r\n\r\nexport const selectTasks = (state) => state.words.tasks;\r\nexport const selectTasksCount = (state) => state.words.tasks.length;\r\n\r\nexport const selectTasksAnswers = (state) => state.words.tasksAnswers;\r\n"],"names":["WellDoneModal","_ref","isOpen","onClose","answers","closeModal","e","code","currentTarget","target","useEffect","document","addEventListener","removeEventListener","correctAnswers","filter","answer","isDone","mistakes","_jsx","className","styles","onClick","children","_jsxs","stopPropagation","type","RxCross2","color","length","map","ua","nanoid","en","mistake","src","book","alt","_excluded","cache","defaultTheme","createTheme","Box","options","arguments","undefined","themeId","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","_extendSxProp$compone","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","ClassNameGenerator","generate","StyledEngineProvider","props","injectFirst","CacheProvider","value","CircularProgressWithLabel","_React$useState","width","height","_React$useState2","_slicedToArray","circleSize","setCircleSize","handleResize","window","innerWidth","progressCircular","sx","position","display","CircularProgress","progressCircul","style","variant","normalise","top","left","bottom","right","alignItems","justifyContent","Typography","progressValue","concat","Math","round","progressCounterValue","CircularWithValueLabel","currentKey","taskValue","useSelector","selectTasksCount","_React$useState3","_React$useState4","setProgress","prevProgress","createCache","key","prepend","TrainingRoom","tasks","navigate","useNavigate","dispatch","useDispatch","selectTasksAnswers","_useState","useState","_useState2","isOpenWellDoneModal","setIsOpenWellDoneModal","_useState3","_useState4","setCurrentKey","_useState5","_useState6","userAnswers","setUserAnswers","_useState7","_useState8","currentWordObject","setCurrentWordObject","_useState9","_useState10","inputValue","setInputValue","_useState11","_useState12","currentTaskLanguage","setCurrentTaskLanguage","_useState13","_useState14","currentLanguageFromTranslate","setCurrentLanguageFromTranslate","_useState15","_useState16","isLastTask","setIsLastTask","_useState17","_useState18","submitRequested","setSubmitRequested","console","log","task","addAnsvers","_Fragment","onSubmit","preventDefault","newAnswer","_id","_toConsumableArray","name","rows","placeholder","onChange","ukraine","united","BsArrowRight","NavLink","to","selectTasks","isLoading","isLoadingWords","isModalOpen","selectIsModalOpen","getTasks","Loader","trainingPageContainer","tasksContainer","trainingWelcomeContainer","trainingСontentWrp","trainingСontentBox","buttonWrp","openModalAddWord","addButton","cancelButton","openModalLogOut","trainingPageImg","report","LogOutModal","selectAllWords","state","words","allWords","selectCategories","categories","selectStatistics","statistics","selectUserWords","userWords","selectIsModalAddWordOpen","isModalAddWordOpen","tasksAnswers"],"sourceRoot":""}