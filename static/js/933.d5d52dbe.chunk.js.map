{"version":3,"file":"static/js/933.d5d52dbe.chunk.js","mappings":"gKACA,MAAsC,4C,kGC+DtC,EAhDuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAqBC,EAAAA,EAAAA,IAAYC,EAAAA,IACvCC,GAA+CF,EAAAA,EAAAA,IAAYG,EAAAA,IAAnDC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAIJ,EAAJI,KAAMC,EAAOL,EAAPK,QAC7BC,GAAYR,EAAAA,EAAAA,IAAYG,EAAAA,IACxBM,GAAYT,EAAAA,EAAAA,IAAYU,EAAAA,KAE9BC,EAAAA,EAAAA,YAAU,WACRd,GAASe,EAAAA,EAAAA,OACTf,GACEgB,EAAAA,EAAAA,IAAa,CAAEP,KAAME,EAAUF,KAAMC,QAASC,EAAUD,UAG5D,GAAG,IAKH,OACEO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGP,GACCQ,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPD,EAAAA,EAAAA,KAAA,OAAKE,UAAWC,EAA2BJ,SACxCZ,EAAQiB,OAAS,GAChBP,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,IACTlB,EAAQiB,OAAS,IAAKJ,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,SAAUpB,IAC5CC,EAAa,IACZY,EAAAA,EAAAA,KAACQ,EAAAA,EAAe,CACdnB,KAAMA,EACND,WAAYA,EACZE,QAASA,EACTmB,aAlBS,SAACC,GACxB9B,GAASgB,EAAAA,EAAAA,IAAa,CAAEP,KAAMqB,EAASpB,QAASC,EAAUD,UAC5D,QAqBUU,EAAAA,EAAAA,KAACK,EAAAA,EAAS,MAIfvB,IAAsBkB,EAAAA,EAAAA,KAACW,EAAAA,EAAY,MAG1C,C","sources":["webpack://vocab-builder/./src/pages/dictionaryPage/DictionaryPage.module.scss?9074","pages/dictionaryPage/DictionaryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dictionaryContainer\":\"DictionaryPage_dictionaryContainer__z-LC4\",\"dictionaryWelcomeContainer\":\"DictionaryPage_dictionaryWelcomeContainer__mhNoO\",\"contentWrp\":\"DictionaryPage_contentWrp__F9WEu\",\"contentBox\":\"DictionaryPage_contentBox__37IMS\",\"buttonWrp\":\"DictionaryPage_buttonWrp__skJyH\",\"addButton\":\"DictionaryPage_addButton__AQ47w\",\"cancelButton\":\"DictionaryPage_cancelButton__ew66x\"};","import styles from \"./DictionaryPage.module.scss\";\r\nimport { Dashboard } from \"../../components/dashboard/Dashboard\";\r\nimport { WordsTable } from \"../../components/wordsTable/WordsTable\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  isLoadingWords,\r\n  selectIsModalAddWordOpen,\r\n  selectUserWords,\r\n} from \"../../redux/words/wordsSelector\";\r\n\r\nimport { AddWordModal } from \"../../components/addWord/AddWordModal\";\r\nimport { Loader } from \"../../components/loader/Loader\";\r\nimport { WordsPagination } from \"../../components/wordsPagination/WordsPagination\";\r\nimport { getStatistics, getUserWords } from \"../../redux/words/wordsOperation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DictionaryPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isModalAddWordOpen = useSelector(selectIsModalAddWordOpen);\r\n  const { results, totalPages, page, perPage } = useSelector(selectUserWords);\r\n  const userWords = useSelector(selectUserWords);\r\n  const isLoading = useSelector(isLoadingWords);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatistics());\r\n    dispatch(\r\n      getUserWords({ page: userWords.page, perPage: userWords.perPage })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    dispatch(getUserWords({ page: newPage, perPage: userWords.perPage }));\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.dictionaryContainer}>\r\n          {results.length > 0 ? (\r\n            <>\r\n              <Dashboard />\r\n              {results.length > 0 && <WordsTable ownWords={results} />}\r\n              {totalPages > 1 && (\r\n                <WordsPagination\r\n                  page={page}\r\n                  totalPages={totalPages}\r\n                  perPage={perPage}\r\n                  onPageChange={handlePageChange}\r\n                />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <Dashboard />\r\n          )}\r\n        </div>\r\n      )}\r\n      {isModalAddWordOpen && <AddWordModal />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DictionaryPage;\r\n"],"names":["dispatch","useDispatch","isModalAddWordOpen","useSelector","selectIsModalAddWordOpen","_useSelector","selectUserWords","results","totalPages","page","perPage","userWords","isLoading","isLoadingWords","useEffect","getStatistics","getUserWords","_jsxs","_Fragment","children","_jsx","Loader","className","styles","length","Dashboard","WordsTable","ownWords","WordsPagination","onPageChange","newPage","AddWordModal"],"sourceRoot":""}