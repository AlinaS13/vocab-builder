{"version":3,"file":"static/js/933.4bd09937.chunk.js","mappings":"8KACA,EAAsC,4C,kGC8DtC,EA/CuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAqBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvCC,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,IAElCG,EAAAA,EAAAA,YAAU,WACRf,GAASgB,EAAAA,EAAAA,MACX,GAAG,CAAChB,IAEJ,IAAMiB,GAAkBC,EAAAA,EAAAA,cACtB,SAACC,GACCC,aAAaX,GAEb,IAAMY,EAAUC,YAAW,WACzBtB,GAASuB,EAAAA,EAAAA,IAAa,CAAEV,YAAaM,EAAMK,SAC7C,GAAG,KAEHd,EAAiBW,EACnB,GACA,CAACZ,EAAeT,IAQlB,OACEyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA2BH,UACzCF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,mBAViB,SAACC,GAC1B,IAAMd,EAAQc,EAAEC,OAAOC,MACvBrB,EAAeK,GACfF,EAAgBE,EAClB,EAOUN,YAAaA,KAEfe,EAAAA,EAAAA,KAACQ,EAAuB,CAACvB,YAAaA,SAIzCX,IAAsB0B,EAAAA,EAAAA,KAACS,EAAAA,EAAY,MAG1C,EAIMD,EAA0B,SAAHE,GAAyB,IAAnBzB,EAAWyB,EAAXzB,YAC3Bb,GAAWC,EAAAA,EAAAA,MACXsC,GAAYpC,EAAAA,EAAAA,IAAYqC,EAAAA,IAC9BC,GAA+CtC,EAAAA,EAAAA,IAAYuC,EAAAA,IAAnDC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAIJ,EAAJI,KAAMC,EAAOL,EAAPK,QAC7BC,GAAY5C,EAAAA,EAAAA,IAAYuC,EAAAA,KAE9B3B,EAAAA,EAAAA,YAAU,WACRf,GACEuB,EAAAA,EAAAA,IAAa,CACXV,YAAAA,EACAgC,KAAME,EAAUF,KAChBC,QAASC,EAAUD,UAGzB,GAAG,CAAC9C,EAAUa,EAAakC,EAAUF,KAAME,EAAUD,UAYrD,OACElB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACGY,GACCX,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,KAEPvB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACGgB,EAAQM,OAAS,GAChBrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAU,CAACC,SAAUR,KAEtBf,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iGAEJiB,EAAa,IACZhB,EAAAA,EAAAA,KAACwB,EAAAA,EAAe,CACdP,KAAMA,EACND,WAAYA,EACZE,QAASA,EACTO,aA1Ba,SAACC,GACxBtD,GACEuB,EAAAA,EAAAA,IAAa,CACXV,YAAAA,EACAgC,KAAMS,EACNR,QAASvB,EAAAA,GAAauB,UAG5B,QAyBF,C","sources":["webpack://vocab-builder/./src/pages/dictionaryPage/DictionaryPage.module.scss?9074","pages/dictionaryPage/DictionaryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dictionaryContainer\":\"DictionaryPage_dictionaryContainer__z-LC4\",\"dictionaryWelcomeContainer\":\"DictionaryPage_dictionaryWelcomeContainer__mhNoO\",\"contentWrp\":\"DictionaryPage_contentWrp__F9WEu\",\"contentBox\":\"DictionaryPage_contentBox__37IMS\",\"buttonWrp\":\"DictionaryPage_buttonWrp__skJyH\",\"addButton\":\"DictionaryPage_addButton__AQ47w\",\"cancelButton\":\"DictionaryPage_cancelButton__ew66x\"};","import styles from \"./DictionaryPage.module.scss\";\r\nimport { Dashboard } from \"../../components/dashboard/Dashboard\";\r\nimport { WordsTable } from \"../../components/wordsTable/WordsTable\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport {\r\n  isLoadingWords,\r\n  selectIsModalAddWordOpen,\r\n  selectUserWords,\r\n} from \"../../redux/words/wordsSelector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AddWordModal } from \"../../components/addWord/AddWordModal\";\r\nimport { Loader } from \"../../components/loader/Loader\";\r\nimport { WordsPagination } from \"../../components/wordsPagination/WordsPagination\";\r\nimport { getStatistics, getUserWords } from \"../../redux/words/wordsOperation\";\r\n\r\nconst DictionaryPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isModalAddWordOpen = useSelector(selectIsModalAddWordOpen);\r\n\r\n  const [debounceTimer, setDebounceTimer] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatistics());\r\n  }, [dispatch]);\r\n\r\n  const debouncedSearch = useCallback(\r\n    (query) => {\r\n      clearTimeout(debounceTimer);\r\n\r\n      const timerId = setTimeout(() => {\r\n        dispatch(getUserWords({ searchQuery: query.trim() }));\r\n      }, 300);\r\n\r\n      setDebounceTimer(timerId);\r\n    },\r\n    [debounceTimer, dispatch]\r\n  );\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n    debouncedSearch(query);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.dictionaryContainer}>\r\n        <>\r\n          <Dashboard\r\n            handleSearchChange={handleSearchChange}\r\n            searchQuery={searchQuery}\r\n          />\r\n          <WordsTableAndPagination searchQuery={searchQuery} />\r\n        </>\r\n      </div>\r\n\r\n      {isModalAddWordOpen && <AddWordModal />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DictionaryPage;\r\n\r\nconst WordsTableAndPagination = ({ searchQuery }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(isLoadingWords);\r\n  const { results, totalPages, page, perPage } = useSelector(selectUserWords);\r\n  const userWords = useSelector(selectUserWords);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getUserWords({\r\n        searchQuery,\r\n        page: userWords.page,\r\n        perPage: userWords.perPage,\r\n      })\r\n    );\r\n  }, [dispatch, searchQuery, userWords.page, userWords.perPage]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    dispatch(\r\n      getUserWords({\r\n        searchQuery,\r\n        page: newPage,\r\n        perPage: getUserWords.perPage,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {results.length > 0 ? (\r\n            <WordsTable ownWords={results} />\r\n          ) : (\r\n            <p>слово не знайдене</p>\r\n          )}\r\n          {totalPages > 1 && (\r\n            <WordsPagination\r\n              page={page}\r\n              totalPages={totalPages}\r\n              perPage={perPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"names":["dispatch","useDispatch","isModalAddWordOpen","useSelector","selectIsModalAddWordOpen","_useState","useState","_useState2","_slicedToArray","debounceTimer","setDebounceTimer","_useState3","_useState4","searchQuery","setSearchQuery","useEffect","getStatistics","debouncedSearch","useCallback","query","clearTimeout","timerId","setTimeout","getUserWords","trim","_jsxs","_Fragment","children","_jsx","className","styles","Dashboard","handleSearchChange","e","target","value","WordsTableAndPagination","AddWordModal","_ref","isLoading","isLoadingWords","_useSelector","selectUserWords","results","totalPages","page","perPage","userWords","Loader","length","WordsTable","ownWords","WordsPagination","onPageChange","newPage"],"sourceRoot":""}