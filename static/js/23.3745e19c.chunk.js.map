{"version":3,"file":"static/js/23.3745e19c.chunk.js","mappings":"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","sources":["assets/svg/ErrorSvg.jsx","assets/svg/SuccessSvg.jsx","webpack://vocab-builder/./src/pages/registerPage/RegisterPage.module.scss?ab8e","webpack://vocab-builder/./src/components/registerForm/RegisterForm.module.scss?ab97","components/registerForm/RegisterForm.jsx","pages/registerPage/RegisterPage.jsx"],"sourcesContent":["import * as React from \"react\";\r\nconst ErrorSVG = (props) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 16 16\"\r\n    fill=\"none\"\r\n  >\r\n    <g clipPath=\"url(#clip0_401_1222)\">\r\n      <path\r\n        d=\"M7.99992 14.6667C4.31792 14.6667 1.33325 11.682 1.33325 8C1.33325 4.318 4.31792 1.33333 7.99992 1.33333C11.6819 1.33333 14.6666 4.318 14.6666 8C14.6666 11.682 11.6819 14.6667 7.99992 14.6667ZM7.33325 10V11.3333H8.66659V10H7.33325ZM7.33325 4.66667V8.66667H8.66659V4.66667H7.33325Z\"\r\n        fill=\"#D80027\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_401_1222\">\r\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\nexport default ErrorSVG;\r\n","import * as React from \"react\";\r\nconst SuccessSVG = (props) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 16 16\"\r\n    fill=\"none\"\r\n  >\r\n    <g clipPath=\"url(#clip0_401_1213)\">\r\n      <path\r\n        d=\"M7.99992 14.6667C4.31792 14.6667 1.33325 11.682 1.33325 8C1.33325 4.318 4.31792 1.33333 7.99992 1.33333C11.6819 1.33333 14.6666 4.318 14.6666 8C14.6666 11.682 11.6819 14.6667 7.99992 14.6667ZM7.22925 10.99L11.9426 6.276L10.9999 5.33333L7.22925 9.10467L5.34325 7.21867L4.40058 8.16133L7.22925 10.99Z\"\r\n        fill=\"#3CBF61\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_401_1213\">\r\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\nexport default SuccessSVG;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"registerPageContainer\":\"RegisterPage_registerPageContainer__KzK+k\",\"contentWrp\":\"RegisterPage_contentWrp__QG0sr\",\"mainImg\":\"RegisterPage_mainImg__Wbfl2\",\"contentText\":\"RegisterPage_contentText__VjD6z\"};","// extracted by mini-css-extract-plugin\nexport default {\"registrationFormWrp\":\"RegisterForm_registrationFormWrp__xsYNY\",\"registrationFormTitle\":\"RegisterForm_registrationFormTitle__-51ZB\",\"registrationFormText\":\"RegisterForm_registrationFormText__nnf0U\",\"registrationForm\":\"RegisterForm_registrationForm__CaLc1\",\"registrationField\":\"RegisterForm_registrationField__bTWju\",\"registrationLabel\":\"RegisterForm_registrationLabel__1nDXq\",\"eyeBox\":\"RegisterForm_eyeBox__gaInw\",\"registrationButton\":\"RegisterForm_registrationButton__olj8U\",\"messageWrp\":\"RegisterForm_messageWrp__cw9pr\",\"errorMessage\":\"RegisterForm_errorMessage__bXWQ8\",\"successMessage\":\"RegisterForm_successMessage__ImGTe\",\"navLink\":\"RegisterForm_navLink__WX3kG\"};","import { Formik, Form, Field } from \"formik\";\r\nimport styles from \"./RegisterForm.module.scss\";\r\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\r\nimport * as yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ErrorSVG from \"../../assets/svg/ErrorSvg\";\r\nimport SuccessSVG from \"../../assets/svg/SuccessSvg\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registrationUser } from \"../../redux/auth/authOperation\";\r\n\r\nconst SignupSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .typeError(\"Must be string\")\r\n    .required(\"Please enter your name\")\r\n    .matches(/^[a-zA-Z0-9а-яА-ЯІіЇї]+$/, \"Special symbols are not allowed\")\r\n    .min(3, \"Your username i s too short\")\r\n    .max(16, \"Username cannot be longer than 16 characters\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email\")\r\n    .typeError(\"Must be string\")\r\n    .trim()\r\n    .required(\"Please enter your email\")\r\n    .min(7, \"Your email is too short\")\r\n    .max(35, \"Email cannot be longer than 35 characters\")\r\n    .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, \"Invalid email format\"),\r\n  password: yup\r\n    .string()\r\n    .typeError(\"Must be string\")\r\n    .trim()\r\n    .required(\"Please enter your password\")\r\n    .min(6, \"Your password is too short\")\r\n    .max(7, \"Password cannot be longer than 7 characters\")\r\n    .test(\r\n      \"password\",\r\n      \"The password must consist of 6 English letters and 1 number\",\r\n      (value) => /^(?=.*[a-zA-Z]{6})(?=.*\\d)[a-zA-Z\\d]{7}$/.test(value || \"\")\r\n    ),\r\n});\r\n\r\nexport const RegisterForm = () => {\r\n  const [passwordType, setPasswordType] = useState(\"password\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRegister = (userData) => {\r\n    dispatch(registrationUser(userData));\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    if (passwordType === \"password\") {\r\n      setPasswordType(\"text\");\r\n      return;\r\n    }\r\n    setPasswordType(\"password\");\r\n  };\r\n  return (\r\n    <Formik\r\n      validationSchema={SignupSchema}\r\n      initialValues={{\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      validateOnBlur\r\n      onSubmit={(userData) => {\r\n        handleRegister(userData);\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        isValid,\r\n        handleSubmit,\r\n        dirty,\r\n      }) => {\r\n        return (\r\n          <div className={styles.registrationFormWrp}>\r\n            <h2 className={styles.registrationFormTitle}>Register</h2>\r\n            <p className={styles.registrationFormText}>\r\n              To start using our services, please fill out the registration form\r\n              below. All fields are mandatory:\r\n            </p>\r\n            <Form className={styles.registrationForm}>\r\n              <label className={styles.registrationLabel}>\r\n                <Field\r\n                  autoComplete=\"off\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.name}\r\n                  className={`${styles.registrationField} ${\r\n                    errors.name && touched.name ? styles.error : \"\"\r\n                  } ${!errors.name && touched.name ? styles.success : \"\"}`}\r\n                />\r\n                {touched.name && errors.name && (\r\n                  <div className={styles.messageWrp}>\r\n                    <ErrorSVG />\r\n                    <p className={styles.errorMessage}>{errors.name}</p>\r\n                  </div>\r\n                )}\r\n                {touched.name && !errors.name && (\r\n                  <div className={styles.messageWrp}>\r\n                    <SuccessSVG />\r\n                    <p className={styles.successMessage}>Success name</p>\r\n                  </div>\r\n                )}\r\n              </label>\r\n\r\n              <label className={styles.registrationLabel}>\r\n                <Field\r\n                  autoComplete=\"off\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.email}\r\n                  className={styles.registrationField}\r\n                />\r\n                {touched.email && errors.email && (\r\n                  <div className={styles.messageWrp}>\r\n                    <ErrorSVG />\r\n                    <p className={styles.errorMessage}>{errors.email}</p>\r\n                  </div>\r\n                )}\r\n                {touched.email && !errors.email && (\r\n                  <div className={styles.messageWrp}>\r\n                    <SuccessSVG />\r\n                    <p className={styles.successMessage}>Success email</p>\r\n                  </div>\r\n                )}\r\n              </label>\r\n\r\n              <label className={styles.registrationLabel}>\r\n                <Field\r\n                  autoComplete=\"off\"\r\n                  name=\"password\"\r\n                  type={passwordType}\r\n                  placeholder=\"Password\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.password}\r\n                  className={styles.registrationField}\r\n                />\r\n                <div className={styles.eyeBox} onClick={togglePassword}>\r\n                  {passwordType === \"password\" ? (\r\n                    <BsEyeSlash fill=\"#121417\" />\r\n                  ) : (\r\n                    <BsEye fill=\"#121417\" />\r\n                  )}\r\n                </div>\r\n                {touched.password && errors.password && (\r\n                  <div className={styles.messageWrp}>\r\n                    <ErrorSVG />\r\n                    <p className={styles.errorMessage}>{errors.password}</p>\r\n                  </div>\r\n                )}\r\n                {touched.password && !errors.password && (\r\n                  <div className={styles.messageWrp}>\r\n                    <SuccessSVG />\r\n                    <p className={styles.successMessage}>Success password</p>\r\n                  </div>\r\n                )}\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}\r\n                className={styles.registrationButton}\r\n              >\r\n                Register\r\n              </button>\r\n              <NavLink className={styles.navLink} to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n","import styles from \"./RegisterPage.module.scss\";\r\nimport { RegisterForm } from \"../../components/registerForm/RegisterForm\";\r\nimport illustration from \"../../assets/img/illustration.png\";\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <div className={styles.registerPageContainer}>\r\n      <RegisterForm />\r\n      <div className={styles.contentWrp}>\r\n        <img src={illustration} className={styles.mainImg} alt={illustration} />\r\n        <p className={styles.contentText}>\r\n          Word · Translation · Grammar · Progress\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["props","_jsxs","xmlns","width","height","viewBox","fill","children","_jsx","clipPath","d","id","SignupSchema","yup","shape","name","typeError","required","matches","min","max","email","trim","password","test","value","RegisterForm","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","dispatch","useDispatch","togglePassword","Formik","validationSchema","initialValues","validateOnBlur","onSubmit","userData","registrationUser","handleRegister","_ref","values","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","className","styles","registrationFormWrp","registrationFormTitle","registrationFormText","Form","registrationForm","registrationLabel","Field","autoComplete","type","placeholder","onChange","onBlur","concat","registrationField","error","success","messageWrp","ErrorSVG","errorMessage","SuccessSVG","successMessage","eyeBox","onClick","BsEyeSlash","BsEye","disabled","registrationButton","NavLink","navLink","to","src","illustration","alt"],"sourceRoot":""}