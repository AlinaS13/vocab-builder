{"version":3,"file":"static/js/168.192e0a06.chunk.js","mappings":"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","sources":["webpack://vocab-builder/./src/components/addWord/AddWordModal.module.scss?e864","webpack://vocab-builder/./src/components/addWordForm/AddWordForm.module.scss?8fdd","components/addWordForm/AddWordForm.jsx","components/addWord/AddWordModal.jsx","webpack://vocab-builder/./src/components/filters/Filters.module.scss?f526","components/filters/Filters.jsx","webpack://vocab-builder/./src/components/dashboard/Dashboard.module.scss?b0f5","components/dashboard/Dashboard.jsx","webpack://vocab-builder/./src/components/wordsPagination/WordsPagination.module.scss?98e5","components/wordsPagination/WordsPagination.jsx","webpack://vocab-builder/./src/components/wordsTable/WordsTable.module.scss?30e7","webpack://vocab-builder/./src/components/actionsModal/ActionsModal.module.scss?776f","webpack://vocab-builder/./src/components/editWordModal/EditWordModal.module.scss?a271","webpack://vocab-builder/./src/components/editWordForm/EditWordForm.module.scss?f886","components/editWordForm/EditWordForm.jsx","components/editWordModal/EditWordModal.jsx","components/actionsModal/ActionsModal.jsx","components/progressBar/ProgressBar.jsx","components/wordsTable/WordsTable.jsx","redux/words/wordsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"AddWordModal_modalOverlay__T67C4\",\"modalContainer\":\"AddWordModal_modalContainer__hBW1u\",\"modalCloseButton\":\"AddWordModal_modalCloseButton__vH3Aw\",\"modalCloseSvg\":\"AddWordModal_modalCloseSvg__RZr2Y\",\"modalTitle\":\"AddWordModal_modalTitle__6JOcu\",\"modalText\":\"AddWordModal_modalText__mYnVi\"};","// extracted by mini-css-extract-plugin\nexport default {\"verbCategoriesWrp\":\"AddWordForm_verbCategoriesWrp__puM70\",\"filterBox\":\"AddWordForm_filterBox__sn+e4\",\"filterBtn\":\"AddWordForm_filterBtn__9xJcF\",\"dropDowList\":\"AddWordForm_dropDowList__+SBAu\",\"dropDownItem\":\"AddWordForm_dropDownItem__3PK76\",\"active\":\"AddWordForm_active__8ejji\",\"hidden\":\"AddWordForm_hidden__HikGm\",\"radioButtons\":\"AddWordForm_radioButtons__rDvxq\",\"categoriesName\":\"AddWordForm_categoriesName__lNgPW\",\"inputSet\":\"AddWordForm_inputSet__dbUJ5\",\"addWordInputWrp\":\"AddWordForm_addWordInputWrp__YugIY\",\"addWordInput\":\"AddWordForm_addWordInput__bZTBn\",\"addWordLabel\":\"AddWordForm_addWordLabel__DecRb\",\"addWordButtonsWrp\":\"AddWordForm_addWordButtonsWrp__jEMgI\",\"addWordButton\":\"AddWordForm_addWordButton__h0OJo\",\"cancelButton\":\"AddWordForm_cancelButton__7jg81\",\"errorMessage\":\"AddWordForm_errorMessage__NpXZ7\",\"errorMessageCategory\":\"AddWordForm_errorMessageCategory__bIsSA\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./AddWordForm.module.scss\";\r\nimport \"./stylesAddWord.css\";\r\nimport { selectCategories } from \"../../redux/words/wordsSelector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\r\nimport ukraine from \"../../assets/img/ukraine.png\";\r\nimport united from \"../../assets/img/united.png\";\r\nimport { addNewWord, getCategories } from \"../../redux/words/wordsOperation\";\r\nimport { toast } from \"react-toastify\";\r\nimport { closeModalAddWord } from \"../../redux/words/wordsSlicе\";\r\n\r\nexport const AddWordForm = () => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n  const [selectedCategoryType, setSelectedCategoryType] = useState(null);\r\n  const [selectedCategories, setSelectedCategories] = useState(false);\r\n  const [selectedCategorie, setSelectedCategorie] = useState(\"Categories\");\r\n  const [isIrregular, setIsIrregular] = useState(false);\r\n  const [en, setEn] = useState(\"\");\r\n  const [ua, setUa] = useState(\"\");\r\n  const [error, setError] = useState({});\r\n\r\n  const [isCategoriesOpen, setIsCategoriesOpen] = useState(false);\r\n\r\n  const hendleOpenCategoriesList = () => {\r\n    setIsCategoriesOpen(!isCategoriesOpen);\r\n  };\r\n  useEffect(() => {\r\n    if (isCategoriesOpen) {\r\n      dispatch(getCategories());\r\n    }\r\n  }, [dispatch, isCategoriesOpen]);\r\n  const enPattern = \"\\\\b[A-Za-z'-]+(?:\\\\s+[A-Za-z'-]+)*\\\\b\";\r\n  const uaPattern = \"^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\\\s]+$\";\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enRegex = new RegExp(enPattern);\r\n    const uaRegex = new RegExp(uaPattern, \"u\");\r\n\r\n    if (!enRegex.test(en)) {\r\n      setError({ message: \"Letter must be English\", code: \"en\" });\r\n      return;\r\n    } else if (!uaRegex.test(ua)) {\r\n      setError({ message: \"Letter must be Ukrainian\", code: \"ua\" });\r\n      return;\r\n    } else if (selectedCategorie === \"Categories\") {\r\n      setError({ message: \"Please select a category\", code: \"category\" });\r\n      return;\r\n    } else {\r\n      setError({});\r\n    }\r\n\r\n    try {\r\n      let newWordData;\r\n      if (selectedCategoryType === \"regular\") {\r\n        newWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          category: selectedCategorie,\r\n          isIrregular: isIrregular,\r\n        };\r\n      } else if (selectedCategoryType === \"irregular\") {\r\n        newWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          category: selectedCategorie,\r\n          isIrregular: isIrregular,\r\n        };\r\n      } else {\r\n        newWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          category: selectedCategorie,\r\n        };\r\n      }\r\n      dispatch(addNewWord(newWordData));\r\n      toast.success(\"Word successfully added\");\r\n      dispatch(closeModalAddWord());\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        toast.error(\"Such a word exists\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div className={styles.verbCategoriesWrp}>\r\n        <div className={styles.filterBox} onClick={hendleOpenCategoriesList}>\r\n          {!isCategoriesOpen ? (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowDown size={20} fill=\"#FCFCFC\" />\r\n            </button>\r\n          ) : (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowUp size={20} fill=\"#FCFCFC\" />\r\n            </button>\r\n          )}\r\n          <p className={styles.categoriesName}>{selectedCategorie}</p>\r\n          <ul\r\n            className={\r\n              isCategoriesOpen === true\r\n                ? styles.dropDowList || styles.active\r\n                : styles.hidden\r\n            }\r\n          >\r\n            <li\r\n              onClick={() => {\r\n                setSelectedCategorie(\"Categories\");\r\n                setSelectedCategories(null);\r\n                setIsCategoriesOpen(false);\r\n                setError({});\r\n              }}\r\n            >\r\n              <p className={styles.categoriesName}> Categories</p>\r\n            </li>\r\n            {categories &&\r\n              categories.map((el) => {\r\n                return (\r\n                  <li\r\n                    onClick={() => {\r\n                      setSelectedCategorie(el);\r\n                      setSelectedCategories(el);\r\n                      setIsCategoriesOpen(false);\r\n                      setError({});\r\n                    }}\r\n                    key={nanoid()}\r\n                    className={\r\n                      el === selectedCategories ? styles.selectedCategory : \"\"\r\n                    }\r\n                  >\r\n                    <p className={styles.categoriesName}>{el}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n        {selectedCategorie === \"verb\" && (\r\n          <div className={styles.radioButtons}>\r\n            <input\r\n              className=\"custom-radio\"\r\n              type=\"radio\"\r\n              id=\"regularCheckbox\"\r\n              name=\"verbModal\"\r\n              value=\"regular\"\r\n              checked={selectedCategoryType === \"regular\"}\r\n              onChange={() => {\r\n                setSelectedCategoryType(\"regular\");\r\n\r\n                setIsIrregular(false);\r\n              }}\r\n            />\r\n            <label htmlFor=\"regularCheckbox\" className={styles.radioInput}>\r\n              Regular\r\n            </label>\r\n            <input\r\n              className=\"custom-radio\"\r\n              type=\"radio\"\r\n              value=\"irregular\"\r\n              id=\"irregularCheckbox\"\r\n              checked={isIrregular}\r\n              onChange={() => {\r\n                setSelectedCategoryType(\"irregular\");\r\n                setIsIrregular(true);\r\n              }}\r\n              name=\"verbModal\"\r\n            />\r\n            <label htmlFor=\"irregularCheckbox\" className={styles.radioInput}>\r\n              Irregular\r\n            </label>\r\n          </div>\r\n        )}\r\n        {error && error.code === \"category\" && (\r\n          <div className={styles.errorMessageCategory}>{error.message}</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles.inputSet}>\r\n        <div className={styles.addWordInputWrp}>\r\n          <input\r\n            className={styles.addWordInput}\r\n            id=\"ua\"\r\n            type=\"text\"\r\n            value={ua}\r\n            onChange={(e) => {\r\n              setUa(e.target.value);\r\n              setError({});\r\n            }}\r\n            required\r\n          />\r\n          {error && error.code === \"ua\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"ua\" className={styles.addWordLabel}>\r\n            <img src={ukraine} alt={ukraine} /> Ukrainian\r\n          </label>\r\n        </div>\r\n\r\n        <div className={styles.addWordInputWrp}>\r\n          <input\r\n            className={styles.addWordInput}\r\n            id=\"en\"\r\n            type=\"text\"\r\n            value={en}\r\n            onChange={(e) => {\r\n              setEn(e.target.value);\r\n              setError({});\r\n            }}\r\n            required\r\n          />\r\n          {error && error.code === \"en\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"en\" className={styles.addWordLabel}>\r\n            <img src={united} alt={united} /> English\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.addWordButtonsWrp}>\r\n        <button className={styles.addWordButton} type=\"submit\">\r\n          Add\r\n        </button>\r\n        <button\r\n          className={styles.cancelButton}\r\n          type=\"button\"\r\n          onClick={() => dispatch(closeModalAddWord())}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport styles from \"./AddWordModal.module.scss\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { AddWordForm } from \"../addWordForm/AddWordForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeModalAddWord } from \"../../redux/words/wordsSlicе\";\r\nimport { selectIsModalAddWordOpen } from \"../../redux/words/wordsSelector\";\r\n\r\nexport const AddWordModal = () => {\r\n  const dispatch = useDispatch();\r\n  const isModalAddWordOpen = useSelector(selectIsModalAddWordOpen);\r\n\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      dispatch(closeModalAddWord());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isModalAddWordOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={closeModal}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={styles.modalCloseButton}\r\n          onClick={() => dispatch(closeModalAddWord())}\r\n        >\r\n          <RxCross2 color=\"#ffffff\" className={styles.modalCloseSvg} />\r\n        </button>\r\n        <h2 className={styles.modalTitle}>Add word</h2>\r\n        <p className={styles.modalText}>\r\n          Adding a new word to the dictionary is an important step in enriching\r\n          the language base and expanding the vocabulary.\r\n        </p>\r\n        <AddWordForm\r\n        // onClick={() => dispatch(closeModalAddWord())}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filtersWrp\":\"Filters_filtersWrp__bzIxK\",\"inputWrp\":\"Filters_inputWrp__Ggkdu\",\"inputSvg\":\"Filters_inputSvg__LoBNa\",\"filterBox\":\"Filters_filterBox__KRNyd\",\"filterBtn\":\"Filters_filterBtn__Kc6mr\",\"dropDowList\":\"Filters_dropDowList__5Jzgb\",\"dropDownItem\":\"Filters_dropDownItem__kdQCF\",\"active\":\"Filters_active__mluDs\",\"hidden\":\"Filters_hidden__KrYiF\",\"radioButtons\":\"Filters_radioButtons__zMmGy\",\"categoriesName\":\"Filters_categoriesName__QKwI6\"};","import { useEffect, useState } from \"react\";\r\nimport styles from \"./Filters.module.scss\";\r\nimport \"./stylesFilter.css\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\r\nimport { MdKeyboardArrowUp } from \"react-icons/md\";\r\nimport { getAllWords, getCategories } from \"../../redux/words/wordsOperation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCategories } from \"../../redux/words/wordsSelector\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { getisAuth} from \"../../redux/auth/authSelector\";\r\n\r\nexport const Filters = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(getisAuth);\r\n  const categories = useSelector(selectCategories);\r\n  const [selectedCategoryType, setSelectedCategoryType] = useState(null);\r\n  const [selectedCategories, setSelectedCategories] = useState(false);\r\n  const [selectedCategorie, setSelectedCategorie] = useState(\"Categories\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [debounceTimer, setDebounceTimer] = useState(null);\r\n  const [isCategoriesOpen, setIsCategoriesOpen] = useState(false);\r\n  const hendleOpenCategoriesList = () => {\r\n    setIsCategoriesOpen(!isCategoriesOpen);\r\n  };\r\n\r\n  const debouncedSearch = (query) => {\r\n    clearTimeout(debounceTimer);\r\n\r\n    const timerId = setTimeout(() => {\r\n      dispatch(getAllWords({ searchQuery: query.trim() }));\r\n    }, 300);\r\n\r\n    setDebounceTimer(timerId);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value;\r\n    setSearchQuery(query);\r\n    debouncedSearch(query);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (searchQuery === \"\") {\r\n  //     dispatch(getAllWords({ searchQuery }));\r\n  //   }\r\n  // }, [dispatch, searchQuery]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getCategories());\r\n  // }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery !== \"\") {\r\n      dispatch(getAllWords({ searchQuery }));\r\n    }\r\n  }, [dispatch, searchQuery]);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      dispatch(getCategories());\r\n    }\r\n  }, [dispatch, isLoggedIn]);\r\n\r\n  return (\r\n    <div className={styles.filtersWrp}>\r\n      <form className={styles.inputWrp}>\r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Find the word\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n        ></input>\r\n        <FiSearch className={styles.inputSvg} color=\"#121417\" />\r\n      </form>\r\n      <div>\r\n        <div className={styles.filterBox} onClick={hendleOpenCategoriesList}>\r\n          {!isCategoriesOpen ? (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowDown size={20} fill=\"#121417\" />\r\n            </button>\r\n          ) : (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowUp size={20} fill=\"#121417\" />\r\n            </button>\r\n          )}\r\n          <p className={styles.categoriesName}>{selectedCategorie}</p>\r\n          <ul\r\n            className={\r\n              isCategoriesOpen === true\r\n                ? styles.dropDowList || styles.active\r\n                : styles.hidden\r\n            }\r\n          >\r\n            <li\r\n              onClick={() => {\r\n                setSelectedCategorie(\"Categories\");\r\n                setSelectedCategories(null);\r\n                setIsCategoriesOpen(false);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <p className={styles.categoriesName}> Categories</p>\r\n            </li>\r\n            {categories &&\r\n              categories.map((el) => {\r\n                return (\r\n                  <li\r\n                    onClick={() => {\r\n                      setSelectedCategorie(el);\r\n                      setSelectedCategories(el);\r\n                      setIsCategoriesOpen(false);\r\n                    }}\r\n                    key={nanoid()}\r\n                    className={\r\n                      el === selectedCategories ? styles.selectedCategory : \"\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <p className={styles.categoriesName}> {el}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {selectedCategorie === \"verb\" && (\r\n        <div className={styles.radioButtons}>\r\n          <input\r\n            className=\"custom-radio-filter\"\r\n            type=\"radio\"\r\n            id=\"custom-1\"\r\n            name=\"verbFilter\"\r\n            value=\"regular\"\r\n            checked={selectedCategoryType === \"regular\"}\r\n            onChange={() => setSelectedCategoryType(\"regular\")}\r\n          />\r\n          <label htmlFor=\"custom-1\" className={styles.radioInput}>\r\n            Regular\r\n          </label>\r\n          <input\r\n            className=\"custom-radio-filter\"\r\n            type=\"radio\"\r\n            value=\"irregular\"\r\n            id=\"custom-2\"\r\n            name=\"verbFilter\"\r\n            checked={selectedCategoryType === \"irregular\"}\r\n            onChange={() => setSelectedCategoryType(\"irregular\")}\r\n          />\r\n          <label htmlFor=\"custom-2\" className={styles.radioInput}>\r\n            Irregular\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import styles from \"./Filters.module.scss\";\r\n// import { FiSearch } from \"react-icons/fi\";\r\n// import { MdKeyboardArrowDown } from \"react-icons/md\";\r\n// import { MdKeyboardArrowUp } from \"react-icons/md\";\r\n// import {\r\n//   getAllWords,\r\n//   getCategories,\r\n//   getWordsByCategory,\r\n// } from \"../../redux/words/wordsOperation\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   isLoadingWords,\r\n//   selectCategories,\r\n// } from \"../../redux/words/wordsSelector\";\r\n// import { Loader } from \"../loader/Loader\";\r\n// import { nanoid } from \"@reduxjs/toolkit\";\r\n\r\n// export const Filters = () => {\r\n//   const dispatch = useDispatch();\r\n//   const categories = useSelector(selectCategories);\r\n//   const isLoading = useSelector(isLoadingWords);\r\n//   const [selectedCategories, setSelectedCategories] = useState(null);\r\n//   const [selectedCategorie, setSelectedCategorie] = useState(\"Categories\");\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [debounceTimer, setDebounceTimer] = useState(null);\r\n//   const [isCategoriesOpen, setIsCategoriesOpen] = useState(false);\r\n//   const hendleOpenCategoriesList = () => {\r\n//     setIsCategoriesOpen(!isCategoriesOpen);\r\n//   };\r\n\r\n//   const debouncedSearch = (query) => {\r\n//     clearTimeout(debounceTimer);\r\n\r\n//     const timerId = setTimeout(() => {\r\n//       if (selectedCategorie === \"Categories\") {\r\n//         dispatch(getAllWords({ queryParams: { search: query.trim() } }));\r\n//       } else {\r\n//         // Виконати запит за словами обраної категорії\r\n//         dispatchWordsByCategory(selectedCategorie, query.trim()); // Використання оновленої функції тут\r\n//       }\r\n//     }, 300);\r\n\r\n//     setDebounceTimer(timerId);\r\n//   };\r\n//   const handleSearchChange = (e) => {\r\n//     const query = e.target.value;\r\n//     setSearchQuery(query);\r\n//     debouncedSearch(query);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (searchQuery === \"\") {\r\n//       if (selectedCategorie === \"Categories\") {\r\n//         dispatch(getAllWords(searchQuery));\r\n//       } else {\r\n//         // Виконати запит за словами обраної категорії\r\n//         dispatch(getWordsByCategory(selectedCategorie, searchQuery));\r\n//       }\r\n//     }\r\n//   }, [dispatch, searchQuery, selectedCategorie]);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getCategories());\r\n//   }, [dispatch]);\r\n\r\n//   // Додамо функцію для виконання запиту за словами обраної категорії\r\n//   const dispatchWordsByCategory = (category, query) => {\r\n//     dispatch(getWordsByCategory({ category, query }));\r\n//     // Ваш код для виконання запиту за словами обраної категорії тут\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.filtersWrp}>\r\n//       <form className={styles.inputWrp}>\r\n//         <input\r\n//           name=\"search\"\r\n//           type=\"text\"\r\n//           autoComplete=\"off\"\r\n//           placeholder=\"Find the word\"\r\n//           value={searchQuery}\r\n//           onChange={handleSearchChange}\r\n//         ></input>\r\n//         <FiSearch className={styles.inputSvg} color=\"#121417\" />\r\n//       </form>\r\n//       <div>\r\n//         <div className={styles.filterBox} onClick={hendleOpenCategoriesList}>\r\n//           {!isCategoriesOpen ? (\r\n//             <button type=\"button\" className={styles.filterBtn}>\r\n//               <MdKeyboardArrowDown size={20} fill=\"#121417\" />\r\n//             </button>\r\n//           ) : (\r\n//             <button type=\"button\" className={styles.filterBtn}>\r\n//               <MdKeyboardArrowUp size={20} fill=\"#121417\" />\r\n//             </button>\r\n//           )}\r\n//           <p>{selectedCategorie}</p>\r\n//           <ul\r\n//             className={\r\n//               isCategoriesOpen === true\r\n//                 ? styles.dropDowList || styles.active\r\n//                 : styles.hidden\r\n//             }\r\n//           >\r\n//             <li\r\n//               onClick={() => {\r\n//                 setSelectedCategorie(\"Categories\");\r\n//                 setSelectedCategories(null);\r\n//                 setIsCategoriesOpen(false);\r\n//               }}\r\n//             >\r\n//               Categories\r\n//             </li>\r\n//             {isLoading ? (\r\n//               <Loader />\r\n//             ) : (\r\n//               categories &&\r\n//               categories.map((el) => {\r\n//                 return (\r\n//                   <li\r\n//                     onClick={() => {\r\n//                       setSelectedCategorie(el);\r\n//                       setSelectedCategories(el);\r\n//                       setIsCategoriesOpen(false);\r\n//                     }}\r\n//                     key={nanoid()}\r\n//                     className={\r\n//                       el === selectedCategories ? styles.selectedCategory : \"\"\r\n//                     }\r\n//                   >\r\n//                     {el}\r\n//                   </li>\r\n//                 );\r\n//               })\r\n//             )}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//       {selectedCategorie === \"verb\" && (\r\n//         <div>\r\n//           <input type=\"radio\" name=\"verbType\" value=\"regular\" /> Regular\r\n//           <input type=\"radio\" name=\"verbType\" value=\"irregular\" /> Irregular\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dashboardFilterWrp\":\"Dashboard_dashboardFilterWrp__akBQy\",\"dashboardWrp\":\"Dashboard_dashboardWrp__r1+xj\",\"dashboardProgres\":\"Dashboard_dashboardProgres__YRw0F\",\"dashboardProgresValue\":\"Dashboard_dashboardProgresValue__u2P-n\",\"dashboardAddBtn\":\"Dashboard_dashboardAddBtn__p3V8Q\",\"dashboardlink\":\"Dashboard_dashboardlink__ifgEM\"};","import { NavLink, useLocation } from \"react-router-dom\";\r\nimport { Filters } from \"../../components/filters/Filters\";\r\nimport styles from \"./Dashboard.module.scss\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\n\r\nimport { AddWordModal } from \"../../components/addWord/AddWordModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  selectIsModalAddWordOpen,\r\n  selectStatistics,\r\n} from \"../../redux/words/wordsSelector\";\r\n\r\nimport { openModalAddWord } from \"../../redux/words/wordsSlicе\";\r\n\r\nexport const Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const statistics = useSelector(selectStatistics);\r\n  const isModalAddWordOpen = useSelector(selectIsModalAddWordOpen);\r\n\r\n  const isDictionaryPage = location.pathname === \"/dictionary\";\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.dashboardFilterWrp}>\r\n        <Filters />\r\n        <div className={styles.dashboardWrp}>\r\n          <div className={styles.dashboardProgres}>\r\n            To study:\r\n            <span className={styles.dashboardProgresValue}>\r\n              {statistics?.totalCount}\r\n            </span>\r\n          </div>\r\n          {isDictionaryPage && (\r\n            <button\r\n              className={styles.dashboardAddBtn}\r\n              type=\"button\"\r\n              onClick={() => dispatch(openModalAddWord())}\r\n            >\r\n              Add word <AiOutlinePlus color=\"#85AA9F\" />\r\n            </button>\r\n          )}\r\n          {isModalAddWordOpen && (\r\n            <AddWordModal\r\n            // isOpen={isOpenAddModal} onClose={closeModalAddWord}\r\n            />\r\n          )}\r\n          <NavLink className={styles.dashboardlink} to=\"/training\">\r\n            Train oneself <BsArrowRight color=\"#85AA9F\" />\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"WordsPagination_pagination__bOMu0\",\"paginationButton\":\"WordsPagination_paginationButton__LEhOa\",\"currentPage\":\"WordsPagination_currentPage__g3qyN\"};","import React from \"react\";\r\nimport styles from \"./WordsPagination.module.scss\";\r\n\r\nimport {\r\n  MdOutlineKeyboardArrowLeft,\r\n  MdOutlineKeyboardArrowRight,\r\n  MdOutlineKeyboardDoubleArrowLeft,\r\n  MdOutlineKeyboardDoubleArrowRight,\r\n} from \"react-icons/md\";\r\n\r\nexport const WordsPagination = ({ page, totalPages, onPageChange }) => {\r\n  const pageNumbers = Array.from(\r\n    { length: totalPages },\r\n    (_, index) => index + 1\r\n  );\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <button\r\n        className={styles.paginationButton}\r\n        onClick={() => onPageChange(1)}\r\n      >\r\n        {<MdOutlineKeyboardDoubleArrowLeft />}\r\n      </button>\r\n      {page > 1 && (\r\n        <button\r\n          className={styles.paginationButton}\r\n          onClick={() => onPageChange(page - 1)}\r\n        >\r\n          {<MdOutlineKeyboardArrowLeft />}\r\n        </button>\r\n      )}\r\n\r\n      {pageNumbers.map((el) => {\r\n        if (\r\n          el === 1 ||\r\n          el === totalPages ||\r\n          (el >= page - 1 && el <= page + 1)\r\n        ) {\r\n          return (\r\n            <button\r\n              key={el}\r\n              onClick={() => onPageChange(el)}\r\n              className={` ${\r\n                el === page ? styles.currentPage : styles.paginationButton\r\n              }`}\r\n            >\r\n              <span>{el}</span>\r\n            </button>\r\n          );\r\n        } else if (el === page - 3 || el === page + 3) {\r\n          return (\r\n            <button\r\n              className={styles.paginationButton}\r\n              key={el}\r\n              onClick={() => onPageChange(el)}\r\n            >\r\n              {\"...\"}\r\n            </button>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      })}\r\n\r\n      {page < totalPages && (\r\n        <button\r\n          className={styles.paginationButton}\r\n          onClick={() => onPageChange(page + 1)}\r\n        >\r\n          {<MdOutlineKeyboardArrowRight />}\r\n        </button>\r\n      )}\r\n      <button\r\n        className={styles.paginationButton}\r\n        onClick={() => onPageChange(totalPages)}\r\n      >\r\n        {<MdOutlineKeyboardDoubleArrowRight />}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableWrp\":\"WordsTable_tableWrp__ZHVzU\",\"table\":\"WordsTable_table__z8qAm\",\"trHead\":\"WordsTable_trHead__g-q1x\",\"thHead\":\"WordsTable_thHead__LT400\",\"tBody\":\"WordsTable_tBody__uhU2J\",\"trBody\":\"WordsTable_trBody__jfJ1v\",\"tdBody\":\"WordsTable_tdBody__VOSC6\",\"actionBtn\":\"WordsTable_actionBtn__wVFX8\",\"addToDictionaryBtn\":\"WordsTable_addToDictionaryBtn__pUhfv\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"ActionsModal_modalOverlay__V3yV5\",\"modalContainer\":\"ActionsModal_modalContainer__ztCIZ\",\"actionBtnWrp\":\"ActionsModal_actionBtnWrp__zXsmK\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"EditWordModal_modalOverlay__6plEZ\",\"modalContainer\":\"EditWordModal_modalContainer__b7Dqs\",\"modalCloseButton\":\"EditWordModal_modalCloseButton__eNzbg\",\"modalCloseSvg\":\"EditWordModal_modalCloseSvg__spS+Y\",\"modalTitle\":\"EditWordModal_modalTitle__je-4V\",\"modalText\":\"EditWordModal_modalText__cCUSB\"};","// extracted by mini-css-extract-plugin\nexport default {\"verbCategoriesWrp\":\"EditWordForm_verbCategoriesWrp__dWdcv\",\"filterBox\":\"EditWordForm_filterBox__FArsa\",\"filterBtn\":\"EditWordForm_filterBtn__1rwhH\",\"dropDowList\":\"EditWordForm_dropDowList__qkVcr\",\"dropDownItem\":\"EditWordForm_dropDownItem__STKw1\",\"active\":\"EditWordForm_active__I--Im\",\"hidden\":\"EditWordForm_hidden__DfvHP\",\"radioButtons\":\"EditWordForm_radioButtons__HksmK\",\"categoriesName\":\"EditWordForm_categoriesName__w97qZ\",\"inputSet\":\"EditWordForm_inputSet__XYKMT\",\"addWordInputWrp\":\"EditWordForm_addWordInputWrp__92BfX\",\"addWordInput\":\"EditWordForm_addWordInput__FfSdq\",\"addWordLabel\":\"EditWordForm_addWordLabel__J897f\",\"addWordButtonsWrp\":\"EditWordForm_addWordButtonsWrp__bG9JN\",\"addWordButton\":\"EditWordForm_addWordButton__BgwYH\",\"cancelButton\":\"EditWordForm_cancelButton__AcKoZ\",\"errorMessage\":\"EditWordForm_errorMessage__CcM1-\",\"errorMessageCategory\":\"EditWordForm_errorMessageCategory__jSv5z\"};","import { useDispatch } from \"react-redux\";\r\nimport styles from \"./EditWordForm.module.scss\";\r\nimport { useState } from \"react\";\r\n\r\nimport ukraine from \"../../assets/img/ukraine.png\";\r\nimport united from \"../../assets/img/united.png\";\r\nimport { editWord } from \"../../redux/words/wordsOperation\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const EditWordForm = ({ onClose, currentWord }) => {\r\n  const dispatch = useDispatch();\r\n  const [en, setEn] = useState(\"\");\r\n  const [ua, setUa] = useState(\"\");\r\n  const [error, setError] = useState({});\r\n\r\n  const enPattern = \"\\\\b[A-Za-z'-]+(?:\\\\s+[A-Za-z'-]+)*\\\\b\";\r\n  const uaPattern = \"^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\\\s]+$\";\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enRegex = new RegExp(enPattern);\r\n    const uaRegex = new RegExp(uaPattern, \"u\");\r\n\r\n    if (!enRegex.test(en)) {\r\n      setError({ message: \"Letter must be English\", code: \"en\" });\r\n      return;\r\n    } else if (!uaRegex.test(ua)) {\r\n      setError({ message: \"Letter must be Ukrainian\", code: \"ua\" });\r\n      return;\r\n    } else {\r\n      setError({});\r\n    }\r\n\r\n    try {\r\n      let editWordData;\r\n      if (true) {\r\n        editWordData = {\r\n          id: currentWord._id,\r\n          data: {\r\n            en: en,\r\n            ua: ua,\r\n            category: currentWord.category,\r\n            isIrregular: currentWord.isIrregular,\r\n          },\r\n        };\r\n      } else if (true) {\r\n        editWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          id: currentWord._id,\r\n        };\r\n      } else {\r\n        editWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          id: currentWord._id,\r\n        };\r\n      }\r\n\r\n      dispatch(editWord(editWordData));\r\n      toast.success(\"Word successfully edited\");\r\n      onClose();\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        toast.error(\"Error: \" + error.response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div className={styles.inputSet}>\r\n        <div className={styles.addWordInputWrp}>\r\n          <input\r\n            className={styles.addWordInput}\r\n            id=\"ua\"\r\n            type=\"text\"\r\n            defaultValue={currentWord.ua}\r\n            onChange={(e) => {\r\n              setUa(e.target.value);\r\n              setError({});\r\n            }}\r\n            required\r\n          />\r\n          {error && error.code === \"ua\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"ua\" className={styles.addWordLabel}>\r\n            <img src={ukraine} alt={ukraine} /> Ukrainian\r\n          </label>\r\n        </div>\r\n\r\n        <div className={styles.addWordInputWrp}>\r\n          <input\r\n            className={styles.addWordInput}\r\n            id=\"en\"\r\n            type=\"text\"\r\n            defaultValue={currentWord.en}\r\n            onChange={(e) => {\r\n              setEn(e.target.value);\r\n              setError({});\r\n            }}\r\n            required\r\n          />\r\n          {error && error.code === \"en\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"en\" className={styles.addWordLabel}>\r\n            <img src={united} alt={united} /> English\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.addWordButtonsWrp}>\r\n        <button className={styles.addWordButton} type=\"submit\">\r\n          Save\r\n        </button>\r\n        <button className={styles.cancelButton} type=\"button\" onClick={onClose}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport styles from \"./EditWordModal.module.scss\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { EditWordForm } from \"../editWordForm/EditWordForm\";\r\n\r\nexport const EditWordModal = ({ isOpen, onClose, currentWord }) => {\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={onClose}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={styles.modalCloseButton}\r\n          onClick={onClose}\r\n        >\r\n          <RxCross2 color=\"#ffffff\" className={styles.modalCloseSvg} />\r\n        </button>\r\n        <EditWordForm onClose={onClose} currentWord={currentWord} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"./ActionsModal.module.scss\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { deleteWord } from \"../../redux/words/wordsOperation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { EditWordModal } from \"../editWordModal/EditWordModal\";\r\n\r\nexport const ActionsModal = ({\r\n  isOpen,\r\n  onClose,\r\n  currentWordId,\r\n  currentWord,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [isOpenEditModal, setIsOpenEditModal] = useState(false);\r\n\r\n  const openModalEditWord = () => setIsOpenEditModal(true);\r\n  const closeModalEditWord = () => setIsOpenEditModal(false);\r\n\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={onClose}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className={styles.actionBtnWrp}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              openModalEditWord();\r\n            }}\r\n          >\r\n            <FiEdit2 color=\"85AA9F\" />\r\n            Edit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              dispatch(deleteWord(currentWordId));\r\n              onClose();\r\n            }}\r\n          >\r\n            <FaRegTrashAlt color=\"85AA9F\" />\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isOpenEditModal && (\r\n        <EditWordModal\r\n          isOpen={isOpenEditModal}\r\n          onClose={closeModalEditWord}\r\n          currentWord={currentWord}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nexport const ProgressBar = ({ value }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"textSecondary\"\r\n        style={{\r\n          marginRight: 16,\r\n          fontSize: 22,\r\n          fontWeight: 500,\r\n          color: \"#121417\",\r\n          fontFamily: \"inherit\",\r\n        }}\r\n      >\r\n        {`${Math.round(value)}%`}\r\n      </Typography>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={value}\r\n        style={{\r\n          color: \"#2BD627\",\r\n          width: \"26px\",\r\n          height: \"26px\",\r\n          borderRadius: \"100%\",\r\n          boxShadow: \"inset 0 0 0px 3px #D4F8D3\",\r\n          backgroundColor: \"transparent\",\r\n        }}\r\n        thickness={5}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\nimport styles from \"./WordsTable.module.scss\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport { ActionsModal } from \"../actionsModal/ActionsModal\";\r\nimport { ProgressBar } from \"../progressBar/ProgressBar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addWordsById } from \"../../redux/words/wordsOperation\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const WordsTable = ({ ownWords, allWordss }) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const isDictionaryPage = location.pathname === \"/dictionary\";\r\n  const [isOpenActionsModal, setIsOpenActionsModal] = useState(false);\r\n  const [currentWordId, setCurrentWordId] = useState(null);\r\n  const [currentWord, setCurrentWord] = useState(null);\r\n\r\n  const openModalActionsWord = () => setIsOpenActionsModal(true);\r\n  const closeModalActionsWord = () => setIsOpenActionsModal(false);\r\n\r\n  const handleActions = (row) => {\r\n    openModalActionsWord();\r\n    setCurrentWordId(row.original._id);\r\n    setCurrentWord(row.original);\r\n  };\r\n\r\n  const handleAddToDictionary = (row) => {\r\n    dispatch(addWordsById(row.original._id));\r\n    toast.success(\"Word successfully added to dictionary\");\r\n  };\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Word\",\r\n        accessor: \"en\",\r\n      },\r\n      {\r\n        Header: \"Translation\",\r\n        accessor: \"ua\",\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"category\",\r\n      },\r\n      ...(isDictionaryPage\r\n        ? [\r\n            {\r\n              Header: \"Progress\",\r\n              accessor: \"progress\",\r\n              Cell: ({ cell }) => <ProgressBar value={cell.value} />,\r\n            },\r\n            {\r\n              Header: \"\",\r\n              accessor: \"actions\",\r\n              Cell: ({ row }) => (\r\n                <button\r\n                  className={styles.actionBtn}\r\n                  onClick={() => handleActions(row)}\r\n                >\r\n                  ...\r\n                </button>\r\n              ),\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              Header: \"\",\r\n              accessor: \"addToDictionary\",\r\n              Cell: ({ row }) => (\r\n                <button\r\n                  className={styles.addToDictionaryBtn}\r\n                  onClick={() => handleAddToDictionary(row)}\r\n                >\r\n                  Add to Dictionary <BsArrowRight color=\"#85AA9F\" />\r\n                </button>\r\n              ),\r\n            },\r\n          ]),\r\n\r\n      // {\r\n      //   Header: \"Progress\",\r\n      //   accessor: \"progress\",\r\n      //   Cell: ({ cell }) => <ProgressBar value={cell.value} />,\r\n      // },\r\n      // {\r\n      //   Header: \"\",\r\n      //   accessor: \"actions\",\r\n      //   Cell: ({ row }) => (\r\n      //     <button\r\n      //       className={styles.actionBtn}\r\n      //       onClick={() => handleActions(row)}\r\n      //     >\r\n      //       ...\r\n      //     </button>\r\n      //   ),\r\n      // },\r\n    ],\r\n    // eslint-disable-next-line\r\n    [isDictionaryPage]\r\n  );\r\n\r\n  const data = useMemo(() => [ownWords], [ownWords]);\r\n  const dataRecomend = useMemo(() => [allWordss], [allWordss]);\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data: isDictionaryPage ? data[0] : dataRecomend[0],\r\n      // data: data[0],\r\n    });\r\n\r\n  return (\r\n    <div className={styles.tableWrp}>\r\n      <table {...getTableProps()} className={styles.table}>\r\n        <thead className={styles.thead}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr\r\n              className={styles.trHead}\r\n              {...headerGroup.getHeaderGroupProps()}\r\n            >\r\n              {headerGroup.headers.map((column) => (\r\n                <th className={styles.thHead} {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody className={styles.tBody} {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n\r\n            return (\r\n              <tr className={styles.trBody} {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td className={styles.tdBody} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {isOpenActionsModal && (\r\n        <ActionsModal\r\n          isOpen={isOpenActionsModal}\r\n          onClose={closeModalActionsWord}\r\n          currentWordId={currentWordId}\r\n          currentWord={currentWord}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const selectAllWords = (state) => state.words.allWords;\r\n\r\nexport const selectCategories = (state) => state.words.categories;\r\n\r\nexport const selectStatistics = (state) => state.words.statistics;\r\n\r\nexport const selectUserWords = (state) => state.words.userWords;\r\n\r\nexport const isLoadingWords = (state) => state.words.isLoading;\r\n\r\nexport const selectIsModalAddWordOpen = (state) =>\r\n  state.words.isModalAddWordOpen;\r\n\r\nexport const selectTasks = (state) => state.words.tasks;\r\nexport const selectTasksCount = (state) => state.words.tasks.length;\r\n\r\nexport const selectTasksAnswers = (state) => state.words.tasksAnswers;\r\n"],"names":["AddWordForm","dispatch","useDispatch","categories","useSelector","selectCategories","_useState","useState","_useState2","_slicedToArray","selectedCategoryType","setSelectedCategoryType","_useState3","_useState4","selectedCategories","setSelectedCategories","_useState5","_useState6","selectedCategorie","setSelectedCategorie","_useState7","_useState8","isIrregular","setIsIrregular","_useState9","_useState10","en","setEn","_useState11","_useState12","ua","setUa","_useState13","_useState14","error","setError","_useState15","_useState16","isCategoriesOpen","setIsCategoriesOpen","useEffect","getCategories","_jsxs","onSubmit","e","preventDefault","enRegex","RegExp","uaRegex","test","newWordData","category","addNewWord","toast","success","closeModalAddWord","response","status","message","code","children","className","styles","verbCategoriesWrp","filterBox","onClick","_jsx","type","filterBtn","MdKeyboardArrowUp","size","fill","MdKeyboardArrowDown","categoriesName","dropDowList","active","hidden","map","el","selectedCategory","nanoid","radioButtons","id","name","value","checked","onChange","htmlFor","radioInput","errorMessageCategory","inputSet","addWordInputWrp","addWordInput","target","required","errorMessage","addWordLabel","src","ukraine","alt","united","addWordButtonsWrp","addWordButton","cancelButton","AddWordModal","isModalAddWordOpen","selectIsModalAddWordOpen","closeModal","currentTarget","document","addEventListener","removeEventListener","stopPropagation","RxCross2","color","Filters","isLoggedIn","getisAuth","searchQuery","setSearchQuery","debounceTimer","setDebounceTimer","getAllWords","filtersWrp","inputWrp","autoComplete","placeholder","query","clearTimeout","timerId","setTimeout","trim","debouncedSearch","FiSearch","inputSvg","Dashboard","location","useLocation","statistics","selectStatistics","isDictionaryPage","pathname","totalCount","openModalAddWord","AiOutlinePlus","NavLink","to","BsArrowRight","WordsPagination","_ref","page","totalPages","onPageChange","pageNumbers","Array","from","length","_","index","MdOutlineKeyboardDoubleArrowLeft","MdOutlineKeyboardArrowLeft","concat","MdOutlineKeyboardArrowRight","MdOutlineKeyboardDoubleArrowRight","EditWordForm","onClose","currentWord","editWordData","_id","data","editWord","defaultValue","EditWordModal","isOpen","ActionsModal","currentWordId","isOpenEditModal","setIsOpenEditModal","FiEdit2","deleteWord","FaRegTrashAlt","ProgressBar","style","display","alignItems","Typography","variant","marginRight","fontSize","fontWeight","fontFamily","Math","round","CircularProgress","width","height","borderRadius","boxShadow","backgroundColor","thickness","WordsTable","ownWords","allWordss","isOpenActionsModal","setIsOpenActionsModal","setCurrentWordId","setCurrentWord","handleActions","row","original","columns","useMemo","Header","accessor","_toConsumableArray","Cell","_ref2","cell","_ref3","actionBtn","_ref4","addToDictionaryBtn","addWordsById","handleAddToDictionary","dataRecomend","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","tableWrp","_objectSpread","table","thead","headerGroup","trHead","getHeaderGroupProps","headers","column","thHead","getHeaderProps","render","tBody","trBody","getRowProps","cells","tdBody","getCellProps","selectAllWords","state","words","allWords","selectUserWords","userWords","isLoadingWords","isLoading","selectTasks","tasks","selectTasksCount","selectTasksAnswers","tasksAnswers"],"sourceRoot":""}