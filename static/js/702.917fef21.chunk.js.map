{"version":3,"file":"static/js/702.917fef21.chunk.js","mappings":"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","sources":["webpack://vocab-builder/./src/components/addWord/AddWordModal.module.scss?e864","webpack://vocab-builder/./src/components/addWordForm/AddWordForm.module.scss?8fdd","components/addWordForm/AddWordForm.jsx","components/addWord/AddWordModal.jsx","webpack://vocab-builder/./src/components/filters/Filters.module.scss?f526","components/filters/Filters.jsx","webpack://vocab-builder/./src/components/dashboard/Dashboard.module.scss?b0f5","components/dashboard/Dashboard.jsx","webpack://vocab-builder/./src/components/wordsPagination/WordsPagination.module.scss?98e5","components/wordsPagination/WordsPagination.jsx","webpack://vocab-builder/./src/components/wordsTable/WordsTable.module.scss?30e7","webpack://vocab-builder/./src/components/actionsModal/ActionsModal.module.scss?776f","webpack://vocab-builder/./src/components/editWordModal/EditWordModal.module.scss?a271","webpack://vocab-builder/./src/components/editWordForm/EditWordForm.module.scss?f886","components/editWordForm/EditWordForm.jsx","components/editWordModal/EditWordModal.jsx","components/actionsModal/ActionsModal.jsx","webpack://vocab-builder/./src/components/progressBar/ProgressBar.module.scss?d6ad","components/progressBar/ProgressBar.jsx","components/wordsTable/WordsTable.jsx","redux/words/wordsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"AddWordModal_modalOverlay__T67C4\",\"modalContainer\":\"AddWordModal_modalContainer__hBW1u\",\"modalCloseButton\":\"AddWordModal_modalCloseButton__vH3Aw\",\"modalCloseSvg\":\"AddWordModal_modalCloseSvg__RZr2Y\",\"modalTitle\":\"AddWordModal_modalTitle__6JOcu\",\"modalText\":\"AddWordModal_modalText__mYnVi\"};","// extracted by mini-css-extract-plugin\nexport default {\"verbCategoriesWrp\":\"AddWordForm_verbCategoriesWrp__puM70\",\"filterBox\":\"AddWordForm_filterBox__sn+e4\",\"filterBtn\":\"AddWordForm_filterBtn__9xJcF\",\"dropDowList\":\"AddWordForm_dropDowList__+SBAu\",\"dropDownItem\":\"AddWordForm_dropDownItem__3PK76\",\"active\":\"AddWordForm_active__8ejji\",\"hidden\":\"AddWordForm_hidden__HikGm\",\"radioButtons\":\"AddWordForm_radioButtons__rDvxq\",\"categoriesName\":\"AddWordForm_categoriesName__lNgPW\",\"inputSet\":\"AddWordForm_inputSet__dbUJ5\",\"addWordInputWrp\":\"AddWordForm_addWordInputWrp__YugIY\",\"addWordInput\":\"AddWordForm_addWordInput__bZTBn\",\"addWordLabel\":\"AddWordForm_addWordLabel__DecRb\",\"addWordButtonsWrp\":\"AddWordForm_addWordButtonsWrp__jEMgI\",\"addWordButton\":\"AddWordForm_addWordButton__h0OJo\",\"cancelButton\":\"AddWordForm_cancelButton__7jg81\",\"errorMessage\":\"AddWordForm_errorMessage__NpXZ7\",\"errorMessageCategory\":\"AddWordForm_errorMessageCategory__bIsSA\",\"addWordImg\":\"AddWordForm_addWordImg__sg5pq\",\"radioInputInfoMessage\":\"AddWordForm_radioInputInfoMessage__1oczn\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./AddWordForm.module.scss\";\r\nimport \"./stylesAddWord.css\";\r\nimport { selectCategories } from \"../../redux/words/wordsSelector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\r\nimport ukraine from \"../../assets/img/ukraine.png\";\r\nimport united from \"../../assets/img/united.png\";\r\nimport { addNewWord, getCategories } from \"../../redux/words/wordsOperation\";\r\nimport { closeModalAddWord } from \"../../redux/words/wordsSlicе\";\r\n\r\nexport const AddWordForm = () => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n  const [selectedCategoryType, setSelectedCategoryType] = useState(null);\r\n  const [selectedCategories, setSelectedCategories] = useState(false);\r\n  const [selectedCategorie, setSelectedCategorie] = useState(\"Categories\");\r\n  const [isIrregular, setIsIrregular] = useState(false);\r\n  const [en, setEn] = useState(\"\");\r\n  const [ua, setUa] = useState(\"\");\r\n  const [error, setError] = useState({});\r\n\r\n  const [isCategoriesOpen, setIsCategoriesOpen] = useState(false);\r\n\r\n  const hendleOpenCategoriesList = () => {\r\n    setIsCategoriesOpen(!isCategoriesOpen);\r\n  };\r\n  useEffect(() => {\r\n    if (isCategoriesOpen && !categories) {\r\n      dispatch(getCategories());\r\n    }\r\n  }, [dispatch, isCategoriesOpen, categories]);\r\n  const enPattern = \"\\\\b[A-Za-z'-]+(?:\\\\s+[A-Za-z'-]+)*\\\\b\";\r\n  const uaPattern = \"^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\\\s]+$\";\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enRegex = new RegExp(enPattern);\r\n    const uaRegex = new RegExp(uaPattern, \"u\");\r\n\r\n    if (!enRegex.test(en)) {\r\n      setError({ message: \"Letter must be English\", code: \"en\" });\r\n      return;\r\n    } else if (!uaRegex.test(ua)) {\r\n      setError({ message: \"Letter must be Ukrainian\", code: \"ua\" });\r\n      return;\r\n    } else if (selectedCategorie === \"Categories\") {\r\n      setError({ message: \"Please select a category\", code: \"category\" });\r\n      return;\r\n    } else {\r\n      setError({});\r\n    }\r\n\r\n    try {\r\n      let newWordData;\r\n      if (selectedCategoryType === \"regular\") {\r\n        newWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          category: selectedCategorie,\r\n          isIrregular: isIrregular,\r\n        };\r\n      } else if (selectedCategoryType === \"irregular\") {\r\n        newWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          category: selectedCategorie,\r\n          isIrregular: isIrregular,\r\n        };\r\n      } else {\r\n        newWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          category: selectedCategorie,\r\n        };\r\n      }\r\n      dispatch(addNewWord(newWordData));\r\n\r\n      dispatch(closeModalAddWord());\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div className={styles.verbCategoriesWrp}>\r\n        <div className={styles.filterBox} onClick={hendleOpenCategoriesList}>\r\n          {!isCategoriesOpen ? (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowDown size={20} fill=\"#FCFCFC\" />\r\n            </button>\r\n          ) : (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowUp size={20} fill=\"#FCFCFC\" />\r\n            </button>\r\n          )}\r\n          <p className={styles.categoriesName}>{selectedCategorie}</p>\r\n          <ul\r\n            className={\r\n              isCategoriesOpen === true\r\n                ? styles.dropDowList || styles.active\r\n                : styles.hidden\r\n            }\r\n          >\r\n            <li\r\n              onClick={() => {\r\n                setSelectedCategorie(\"Categories\");\r\n                setSelectedCategories(null);\r\n                setIsCategoriesOpen(false);\r\n                setError({});\r\n              }}\r\n            >\r\n              <p className={styles.categoriesName}> Categories</p>\r\n            </li>\r\n            {categories &&\r\n              categories.map((el) => {\r\n                return (\r\n                  <li\r\n                    onClick={() => {\r\n                      setSelectedCategorie(el);\r\n                      setSelectedCategories(el);\r\n                      setIsCategoriesOpen(false);\r\n                      setError({});\r\n                    }}\r\n                    key={nanoid()}\r\n                    className={\r\n                      el === selectedCategories ? styles.selectedCategory : \"\"\r\n                    }\r\n                  >\r\n                    <p className={styles.categoriesName}>{el}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n        {selectedCategorie === \"verb\" && (\r\n          <div className={styles.radioButtons}>\r\n            <input\r\n              className=\"custom-radio\"\r\n              type=\"radio\"\r\n              id=\"regularCheckbox\"\r\n              name=\"verbModal\"\r\n              value=\"regular\"\r\n              checked={selectedCategoryType === \"regular\"}\r\n              onChange={() => {\r\n                setSelectedCategoryType(\"regular\");\r\n\r\n                setIsIrregular(false);\r\n              }}\r\n            />\r\n            <label htmlFor=\"regularCheckbox\" className={styles.radioInput}>\r\n              Regular\r\n            </label>\r\n            <input\r\n              className=\"custom-radio\"\r\n              type=\"radio\"\r\n              value=\"irregular\"\r\n              id=\"irregularCheckbox\"\r\n              checked={isIrregular}\r\n              onChange={() => {\r\n                setSelectedCategoryType(\"irregular\");\r\n                setIsIrregular(true);\r\n              }}\r\n              name=\"verbModal\"\r\n            />\r\n            <label htmlFor=\"irregularCheckbox\" className={styles.radioInput}>\r\n              Irregular\r\n            </label>\r\n            {isIrregular && (\r\n              <p className={styles.radioInputInfoMessage}>\r\n                Such data must be entered in the format I form-II form-III form.\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n        {error && error.code === \"category\" && (\r\n          <div className={styles.errorMessageCategory}>{error.message}</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles.inputSet}>\r\n        <div className={styles.addWordInputWrp}>\r\n          <input\r\n            className={styles.addWordInput}\r\n            id=\"ua\"\r\n            type=\"text\"\r\n            value={ua}\r\n            onChange={(e) => {\r\n              setUa(e.target.value);\r\n              setError({});\r\n            }}\r\n            required\r\n          />\r\n          {error && error.code === \"ua\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"ua\" className={styles.addWordLabel}>\r\n            <img src={ukraine} alt={ukraine} className={styles.addWordImg} />\r\n            Ukrainian\r\n          </label>\r\n        </div>\r\n\r\n        <div className={styles.addWordInputWrp}>\r\n          <input\r\n            className={styles.addWordInput}\r\n            id=\"en\"\r\n            type=\"text\"\r\n            value={en}\r\n            onChange={(e) => {\r\n              setEn(e.target.value);\r\n              setError({});\r\n            }}\r\n            required\r\n          />\r\n          {error && error.code === \"en\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"en\" className={styles.addWordLabel}>\r\n            <img src={united} alt={united} className={styles.addWordImg} />{\" \"}\r\n            English\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.addWordButtonsWrp}>\r\n        <button className={styles.addWordButton} type=\"submit\">\r\n          Add\r\n        </button>\r\n        <button\r\n          className={styles.cancelButton}\r\n          type=\"button\"\r\n          onClick={() => dispatch(closeModalAddWord())}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport styles from \"./AddWordModal.module.scss\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { AddWordForm } from \"../addWordForm/AddWordForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeModalAddWord } from \"../../redux/words/wordsSlicе\";\r\nimport { selectIsModalAddWordOpen } from \"../../redux/words/wordsSelector\";\r\n\r\nexport const AddWordModal = () => {\r\n  const dispatch = useDispatch();\r\n  const isModalAddWordOpen = useSelector(selectIsModalAddWordOpen);\r\n\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      dispatch(closeModalAddWord());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isModalAddWordOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={closeModal}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={styles.modalCloseButton}\r\n          onClick={() => dispatch(closeModalAddWord())}\r\n        >\r\n          <RxCross2 color=\"#ffffff\" className={styles.modalCloseSvg} />\r\n        </button>\r\n        <h2 className={styles.modalTitle}>Add word</h2>\r\n        <p className={styles.modalText}>\r\n          Adding a new word to the dictionary is an important step in enriching\r\n          the language base and expanding the vocabulary.\r\n        </p>\r\n        <AddWordForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filtersWrp\":\"Filters_filtersWrp__bzIxK\",\"inputWrp\":\"Filters_inputWrp__Ggkdu\",\"inputSvg\":\"Filters_inputSvg__LoBNa\",\"filterBox\":\"Filters_filterBox__KRNyd\",\"filterBtn\":\"Filters_filterBtn__Kc6mr\",\"dropDowList\":\"Filters_dropDowList__5Jzgb\",\"dropDownItem\":\"Filters_dropDownItem__kdQCF\",\"active\":\"Filters_active__mluDs\",\"hidden\":\"Filters_hidden__KrYiF\",\"radioButtons\":\"Filters_radioButtons__zMmGy\",\"categoriesName\":\"Filters_categoriesName__QKwI6\",\"radioLabel\":\"Filters_radioLabel__0509p\"};","import { useEffect, useState } from \"react\";\r\nimport styles from \"./Filters.module.scss\";\r\nimport \"./stylesFilter.css\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\r\nimport { MdKeyboardArrowUp } from \"react-icons/md\";\r\nimport {\r\n  getAllWords,\r\n  getCategories,\r\n  getUserWords,\r\n} from \"../../redux/words/wordsOperation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCategories } from \"../../redux/words/wordsSelector\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { getisAuth } from \"../../redux/auth/authSelector\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const Filters = ({ handleSearchChange, searchQuery }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(getisAuth);\r\n  const location = useLocation();\r\n  const categories = useSelector(selectCategories);\r\n  const [isSelectedCategories, setIsSelectedCategories] = useState(false);\r\n\r\n  const [selectedVerbCategory, setSelectedVerbCategory] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"Categories\");\r\n  const [isCategoriesOpen, setIsCategoriesOpen] = useState(false);\r\n\r\n  const isDictionaryPage = location.pathname === \"/dictionary\";\r\n\r\n  const hendleOpenCategoriesList = () => {\r\n    setIsCategoriesOpen(!isCategoriesOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn && !categories) {\r\n      dispatch(getCategories());\r\n    }\r\n  }, [dispatch, isLoggedIn, categories]);\r\n\r\n  const hendleSelectCategory = (el) => {\r\n    setSelectedCategory(el);\r\n    setIsCategoriesOpen(false);\r\n\r\n    if (isDictionaryPage) {\r\n      dispatch(getUserWords({ selectedCategory: el }));\r\n    } else if (!isDictionaryPage) {\r\n      dispatch(getAllWords({ selectedCategory: el }));\r\n    }\r\n  };\r\n  const handleVerbCategoryChange = (value) => {\r\n    setSelectedVerbCategory(value);\r\n    if (isDictionaryPage) {\r\n      dispatch(getUserWords({ selectedCategory: \"verb\", isIrregular: value }));\r\n    } else if (!isDictionaryPage) {\r\n      dispatch(getAllWords({ selectedCategory: \"verb\", isIrregular: value }));\r\n    }\r\n  };\r\n  const handleResetFilters = () => {\r\n    setSelectedVerbCategory(null);\r\n    setIsCategoriesOpen(false);\r\n    const radioButtons = document.getElementsByName(\"verbFilter\");\r\n    radioButtons.forEach((button) => {\r\n      button.checked = false;\r\n    });\r\n    handleVerbCategoryChange(null);\r\n    hendleSelectCategory(null);\r\n    setSelectedCategory(\"Categories\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filtersWrp}>\r\n      <form className={styles.inputWrp}>\r\n        <input\r\n          name=\"search\"\r\n          type=\"search\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Find the word\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n        ></input>\r\n        <FiSearch className={styles.inputSvg} color=\"#121417\" />\r\n      </form>\r\n      <div>\r\n        <div className={styles.filterBox} onClick={hendleOpenCategoriesList}>\r\n          {!isCategoriesOpen ? (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowDown size={20} fill=\"#121417\" />\r\n            </button>\r\n          ) : (\r\n            <button type=\"button\" className={styles.filterBtn}>\r\n              <MdKeyboardArrowUp size={20} fill=\"#121417\" />\r\n            </button>\r\n          )}\r\n          <p className={styles.categoriesName}>{selectedCategory}</p>\r\n          <ul\r\n            className={\r\n              isCategoriesOpen === true\r\n                ? styles.dropDowList || styles.active\r\n                : styles.hidden\r\n            }\r\n          >\r\n            <li onClick={handleResetFilters}>\r\n              <p className={styles.categoriesName}>Categories</p>\r\n            </li>\r\n            {categories &&\r\n              categories.map((el) => {\r\n                return (\r\n                  <li\r\n                    onClick={() => {\r\n                      hendleSelectCategory(el);\r\n                    }}\r\n                    key={nanoid()}\r\n                    className={\r\n                      el === isSelectedCategories ? styles.selectedCategory : \"\"\r\n                    }\r\n                  >\r\n                    <p className={styles.categoriesName}> {el}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {selectedCategory === \"verb\" && (\r\n        <div className={styles.radioButtons}>\r\n          <input\r\n            className=\"custom-radio-filter\"\r\n            type=\"radio\"\r\n            id=\"custom-1\"\r\n            name=\"verbFilter\"\r\n            value=\"regular\"\r\n            checked={selectedVerbCategory === \"true\"}\r\n            onChange={() => handleVerbCategoryChange(\"true\")}\r\n          />\r\n          <label htmlFor=\"custom-1\">\r\n            <span className={styles.radioLabel}>Regular</span>\r\n          </label>\r\n          <input\r\n            className=\"custom-radio-filter\"\r\n            type=\"radio\"\r\n            value=\"irregular\"\r\n            id=\"custom-2\"\r\n            name=\"verbFilter\"\r\n            checked={selectedVerbCategory === \"false\"}\r\n            onChange={() => handleVerbCategoryChange(\"false\")}\r\n          />\r\n          <label htmlFor=\"custom-2\">\r\n            <span className={styles.radioLabel}>Irregular</span>\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dashboardFilterWrp\":\"Dashboard_dashboardFilterWrp__akBQy\",\"dashboardWrp\":\"Dashboard_dashboardWrp__r1+xj\",\"dashboardProgres\":\"Dashboard_dashboardProgres__YRw0F\",\"dashboardProgresValue\":\"Dashboard_dashboardProgresValue__u2P-n\",\"dashboardAddBtnAndLinkWrp\":\"Dashboard_dashboardAddBtnAndLinkWrp__bJ0Yv\",\"dashboardAddBtn\":\"Dashboard_dashboardAddBtn__p3V8Q\",\"dashboardlink\":\"Dashboard_dashboardlink__ifgEM\"};","import { NavLink, useLocation } from \"react-router-dom\";\r\nimport { Filters } from \"../../components/filters/Filters\";\r\nimport styles from \"./Dashboard.module.scss\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\n\r\nimport { AddWordModal } from \"../../components/addWord/AddWordModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  selectIsModalAddWordOpen,\r\n  selectStatistics,\r\n} from \"../../redux/words/wordsSelector\";\r\n\r\nimport { openModalAddWord } from \"../../redux/words/wordsSlicе\";\r\n\r\nexport const Dashboard = ({ handleSearchChange, searchQuery }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const location = useLocation();\r\n  const statistics = useSelector(selectStatistics);\r\n  const isModalAddWordOpen = useSelector(selectIsModalAddWordOpen);\r\n\r\n  const isDictionaryPage = location.pathname === \"/dictionary\";\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.dashboardFilterWrp}>\r\n        <Filters\r\n          handleSearchChange={handleSearchChange}\r\n          searchQuery={searchQuery}\r\n        />\r\n        <div className={styles.dashboardWrp}>\r\n          <div className={styles.dashboardProgres}>\r\n            To study:\r\n            <span className={styles.dashboardProgresValue}>\r\n              {statistics?.totalCount}\r\n            </span>\r\n          </div>\r\n          <div className={styles.dashboardAddBtnAndLinkWrp}>\r\n            {isDictionaryPage && (\r\n              <button\r\n                className={styles.dashboardAddBtn}\r\n                type=\"button\"\r\n                onClick={() => dispatch(openModalAddWord())}\r\n              >\r\n                Add word <AiOutlinePlus color=\"#85AA9F\" />\r\n              </button>\r\n            )}\r\n            {isModalAddWordOpen && <AddWordModal />}\r\n            <NavLink className={styles.dashboardlink} to=\"/training\">\r\n              Train oneself <BsArrowRight color=\"#85AA9F\" />\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"WordsPagination_pagination__bOMu0\",\"paginationButton\":\"WordsPagination_paginationButton__LEhOa\",\"currentPage\":\"WordsPagination_currentPage__g3qyN\"};","import React from \"react\";\r\nimport styles from \"./WordsPagination.module.scss\";\r\n\r\nimport {\r\n  MdOutlineKeyboardArrowLeft,\r\n  MdOutlineKeyboardArrowRight,\r\n  MdOutlineKeyboardDoubleArrowLeft,\r\n  MdOutlineKeyboardDoubleArrowRight,\r\n} from \"react-icons/md\";\r\n\r\nexport const WordsPagination = ({ page, totalPages, onPageChange }) => {\r\n  const pageNumbers = Array.from(\r\n    { length: totalPages },\r\n    (_, index) => index + 1\r\n  );\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <button\r\n        className={styles.paginationButton}\r\n        onClick={() => onPageChange(1)}\r\n      >\r\n        {<MdOutlineKeyboardDoubleArrowLeft />}\r\n      </button>\r\n      {page > 1 && (\r\n        <button\r\n          className={styles.paginationButton}\r\n          onClick={() => onPageChange(page - 1)}\r\n        >\r\n          {<MdOutlineKeyboardArrowLeft />}\r\n        </button>\r\n      )}\r\n\r\n      {pageNumbers.map((el) => {\r\n        if (\r\n          el === 1 ||\r\n          el === totalPages ||\r\n          (el >= page - 1 && el <= page + 1)\r\n        ) {\r\n          return (\r\n            <button\r\n              key={el}\r\n              onClick={() => onPageChange(el)}\r\n              className={` ${\r\n                el === page ? styles.currentPage : styles.paginationButton\r\n              }`}\r\n            >\r\n              <span>{el}</span>\r\n            </button>\r\n          );\r\n        } else if (el === page - 3 || el === page + 3) {\r\n          return (\r\n            <button\r\n              className={styles.paginationButton}\r\n              key={el}\r\n              onClick={() => onPageChange(el)}\r\n            >\r\n              {\"...\"}\r\n            </button>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      })}\r\n\r\n      {page < totalPages && (\r\n        <button\r\n          className={styles.paginationButton}\r\n          onClick={() => onPageChange(page + 1)}\r\n        >\r\n          {<MdOutlineKeyboardArrowRight />}\r\n        </button>\r\n      )}\r\n      <button\r\n        className={styles.paginationButton}\r\n        onClick={() => onPageChange(totalPages)}\r\n      >\r\n        {<MdOutlineKeyboardDoubleArrowRight />}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableWrp\":\"WordsTable_tableWrp__ZHVzU\",\"table\":\"WordsTable_table__z8qAm\",\"thead\":\"WordsTable_thead__E12xP\",\"trHead\":\"WordsTable_trHead__g-q1x\",\"thHead\":\"WordsTable_thHead__LT400\",\"tBody\":\"WordsTable_tBody__uhU2J\",\"trBody\":\"WordsTable_trBody__jfJ1v\",\"tdBody\":\"WordsTable_tdBody__VOSC6\",\"actionBtn\":\"WordsTable_actionBtn__wVFX8\",\"addToDictionaryBtn\":\"WordsTable_addToDictionaryBtn__pUhfv\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"ActionsModal_modalOverlay__V3yV5\",\"modalContainer\":\"ActionsModal_modalContainer__ztCIZ\",\"actionBtnWrp\":\"ActionsModal_actionBtnWrp__zXsmK\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"EditWordModal_modalOverlay__6plEZ\",\"modalContainer\":\"EditWordModal_modalContainer__b7Dqs\",\"modalCloseButton\":\"EditWordModal_modalCloseButton__eNzbg\",\"modalCloseSvg\":\"EditWordModal_modalCloseSvg__spS+Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputSet\":\"EditWordForm_inputSet__XYKMT\",\"editWordInputWrp\":\"EditWordForm_editWordInputWrp__SiNHT\",\"editWordInput\":\"EditWordForm_editWordInput__b22Wl\",\"editWordLabel\":\"EditWordForm_editWordLabel__YqtKU\",\"editWordImg\":\"EditWordForm_editWordImg__7ahOa\",\"editWordButtonsWrp\":\"EditWordForm_editWordButtonsWrp__TVXg3\",\"saveWordButton\":\"EditWordForm_saveWordButton__GBNpm\",\"cancelButton\":\"EditWordForm_cancelButton__AcKoZ\",\"errorMessage\":\"EditWordForm_errorMessage__CcM1-\"};","import { useDispatch } from \"react-redux\";\r\nimport styles from \"./EditWordForm.module.scss\";\r\nimport { useState } from \"react\";\r\n\r\nimport ukraine from \"../../assets/img/ukraine.png\";\r\nimport united from \"../../assets/img/united.png\";\r\nimport { editWord } from \"../../redux/words/wordsOperation\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const EditWordForm = ({ onClose, currentWord }) => {\r\n  const dispatch = useDispatch();\r\n  const [en, setEn] = useState(currentWord.en);\r\n  const [ua, setUa] = useState(currentWord.ua);\r\n  const [error, setError] = useState({});\r\n\r\n  const enPattern = \"\\\\b[A-Za-z'-]+(?:\\\\s+[A-Za-z'-]+)*\\\\b\";\r\n  const uaPattern = \"^(?![A-Za-z])[А-ЯІЄЇҐґа-яієїʼ\\\\s]+$\";\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enRegex = new RegExp(enPattern);\r\n    const uaRegex = new RegExp(uaPattern, \"u\");\r\n\r\n    if (!en || !ua) {\r\n      setError({ message: \"Please fill in both fields\", code: \"emptyFields\" });\r\n      return;\r\n    } else if (!enRegex.test(en)) {\r\n      setError({ message: \"Letter must be English\", code: \"en\" });\r\n      return;\r\n    } else if (!uaRegex.test(ua)) {\r\n      setError({ message: \"Letter must be Ukrainian\", code: \"ua\" });\r\n      return;\r\n    } else {\r\n      setError({});\r\n    }\r\n\r\n    try {\r\n      let editWordData;\r\n      if (true) {\r\n        editWordData = {\r\n          id: currentWord._id,\r\n          data: {\r\n            en: en,\r\n            ua: ua,\r\n            category: currentWord.category,\r\n            isIrregular: currentWord.isIrregular,\r\n          },\r\n        };\r\n      } else if (true) {\r\n        editWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          id: currentWord._id,\r\n        };\r\n      } else {\r\n        editWordData = {\r\n          en: en,\r\n          ua: ua,\r\n          id: currentWord._id,\r\n        };\r\n      }\r\n\r\n      dispatch(editWord(editWordData));\r\n      onClose();\r\n    } catch (error) {\r\n      if (error.response.status === 401) {\r\n        toast.error(\"Error: \" + error.response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div className={styles.inputSet}>\r\n        <div className={styles.editWordInputWrp}>\r\n          <input\r\n            className={styles.editWordInput}\r\n            id=\"ua\"\r\n            type=\"text\"\r\n            defaultValue={currentWord.ua}\r\n            onChange={(e) => {\r\n              setUa(e.target.value);\r\n              setError({});\r\n            }}\r\n          />\r\n          {error && error.code === \"ua\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n\r\n          <label htmlFor=\"ua\" className={styles.editWordLabel}>\r\n            <img src={ukraine} alt={ukraine} className={styles.editWordImg} />\r\n            Ukrainian\r\n          </label>\r\n        </div>\r\n\r\n        <div className={styles.editWordInputWrp}>\r\n          <input\r\n            className={styles.editWordInput}\r\n            id=\"en\"\r\n            type=\"text\"\r\n            defaultValue={currentWord.en}\r\n            onChange={(e) => {\r\n              setEn(e.target.value);\r\n              setError({});\r\n            }}\r\n          />\r\n          {error && error.code === \"en\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          {error.code === \"emptyFields\" && (\r\n            <div className={styles.errorMessage}>{error.message}</div>\r\n          )}\r\n          <label htmlFor=\"en\" className={styles.editWordLabel}>\r\n            <img src={united} alt={united} className={styles.editWordImg} />\r\n            English\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.editWordButtonsWrp}>\r\n        <button className={styles.saveWordButton} type=\"submit\">\r\n          Save\r\n        </button>\r\n        <button className={styles.cancelButton} type=\"button\" onClick={onClose}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport styles from \"./EditWordModal.module.scss\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { EditWordForm } from \"../editWordForm/EditWordForm\";\r\n\r\nexport const EditWordModal = ({ isOpen, onClose, currentWord }) => {\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={onClose}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={styles.modalCloseButton}\r\n          onClick={onClose}\r\n        >\r\n          <RxCross2 color=\"#ffffff\" className={styles.modalCloseSvg} />\r\n        </button>\r\n        <EditWordForm onClose={onClose} currentWord={currentWord} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"./ActionsModal.module.scss\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { deleteWord, getStatistics } from \"../../redux/words/wordsOperation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { EditWordModal } from \"../editWordModal/EditWordModal\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const ActionsModal = ({\r\n  isOpen,\r\n  onClose,\r\n  currentWordId,\r\n  currentWord,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [isOpenEditModal, setIsOpenEditModal] = useState(false);\r\n\r\n  const openModalEditWord = () => setIsOpenEditModal(true);\r\n  const closeModalEditWord = () => setIsOpenEditModal(false);\r\n\r\n  const closeModal = (e) => {\r\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    document.addEventListener(\"keydown\", closeModal);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  });\r\n\r\n  const hendleDeleteWord = () => {\r\n    dispatch(deleteWord(currentWordId))\r\n      .then((response) => {\r\n        if (response.payload) {\r\n          dispatch(getStatistics());\r\n          toast.success(\"Word successfully deleted\");\r\n        } else {\r\n          toast.error(\"Failed to delete word\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Failed to delete word\");\r\n      });\r\n    onClose();\r\n  };\r\n  return (\r\n    <div className={styles.modalOverlay} onClick={onClose}>\r\n      <div\r\n        className={styles.modalContainer}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <div className={styles.actionBtnWrp}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              openModalEditWord();\r\n            }}\r\n          >\r\n            <FiEdit2 color=\"85AA9F\" />\r\n            Edit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              hendleDeleteWord();\r\n            }}\r\n          >\r\n            <FaRegTrashAlt color=\"85AA9F\" />\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {isOpenEditModal && (\r\n        <EditWordModal\r\n          isOpen={isOpenEditModal}\r\n          onClose={closeModalEditWord}\r\n          currentWord={currentWord}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ProgressBox\":\"ProgressBar_ProgressBox__mfEyC\",\"numberValue\":\"ProgressBar_numberValue__gmEVv\"};","import * as React from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { Typography } from \"@mui/material\";\r\nimport styles from \"./ProgressBar.module.scss\";\r\n\r\nexport const ProgressBar = ({ value }) => {\r\n  return (\r\n    <div className={styles.ProgressBox}>\r\n      <Typography variant=\"body2\" className={styles.numberValue}>\r\n        {`${Math.round(value)}%`}\r\n      </Typography>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={value}\r\n        style={{\r\n          color: \"#2BD627\",\r\n          width: \"26px\",\r\n          height: \"26px\",\r\n          borderRadius: \"100%\",\r\n          boxShadow: \"inset 0 0 0px 3px #D4F8D3\",\r\n          backgroundColor: \"transparent\",\r\n        }}\r\n        thickness={5}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\nimport styles from \"./WordsTable.module.scss\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport { ActionsModal } from \"../actionsModal/ActionsModal\";\r\nimport { ProgressBar } from \"../progressBar/ProgressBar\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addWordsById, getStatistics } from \"../../redux/words/wordsOperation\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const WordsTable = ({ ownWords, allWords }) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const isDictionaryPage = location.pathname === \"/dictionary\";\r\n  const [isOpenActionsModal, setIsOpenActionsModal] = useState(false);\r\n  const [currentWordId, setCurrentWordId] = useState(null);\r\n  const [currentWord, setCurrentWord] = useState(null);\r\n\r\n  const openModalActionsWord = () => setIsOpenActionsModal(true);\r\n  const closeModalActionsWord = () => setIsOpenActionsModal(false);\r\n\r\n  const handleActions = (row) => {\r\n    openModalActionsWord();\r\n    setCurrentWordId(row.original._id);\r\n    setCurrentWord(row.original);\r\n  };\r\n\r\n  const handleAddToDictionary = (row) => {\r\n    dispatch(addWordsById(row.original._id))\r\n      .then((response) => {\r\n        if (response.payload) {\r\n          dispatch(getStatistics());\r\n        } else {\r\n          toast.error(\"Failed to add word to dictionary\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Failed to add word to dictionary\");\r\n      });\r\n  };\r\n\r\n  const mobileHiddenCategory = window.innerWidth < 768;\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Word\",\r\n        accessor: \"en\",\r\n      },\r\n      {\r\n        Header: \"Translation\",\r\n        accessor: \"ua\",\r\n      },\r\n\r\n      ...((!isDictionaryPage && mobileHiddenCategory) || !mobileHiddenCategory\r\n        ? [\r\n            {\r\n              Header: \"Category\",\r\n              accessor: \"category\",\r\n            },\r\n          ]\r\n        : []),\r\n      ...(isDictionaryPage\r\n        ? [\r\n            {\r\n              Header: \"Progress\",\r\n              accessor: \"progress\",\r\n              Cell: ({ cell }) => <ProgressBar value={cell.value} />,\r\n            },\r\n            {\r\n              Header: \"\",\r\n              accessor: \"actions\",\r\n              Cell: ({ row }) => (\r\n                <button\r\n                  className={styles.actionBtn}\r\n                  onClick={() => handleActions(row)}\r\n                >\r\n                  ...\r\n                </button>\r\n              ),\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              Header: \"\",\r\n              accessor: \"addToDictionary\",\r\n              Cell: ({ row }) => (\r\n                <button\r\n                  className={styles.addToDictionaryBtn}\r\n                  onClick={() => handleAddToDictionary(row)}\r\n                >\r\n                  <span>Add to dictionary </span>\r\n                  <BsArrowRight color=\"#85AA9F\" />\r\n                </button>\r\n              ),\r\n            },\r\n          ]),\r\n    ],\r\n    // eslint-disable-next-line\r\n    [isDictionaryPage]\r\n  );\r\n\r\n  const data = useMemo(() => [ownWords], [ownWords]);\r\n  const dataRecomend = useMemo(() => [allWords], [allWords]);\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns,\r\n      data: isDictionaryPage ? data[0] : dataRecomend[0],\r\n    });\r\n\r\n  return (\r\n    <div className={styles.tableWrp}>\r\n      <table {...getTableProps()} className={styles.table}>\r\n        <thead className={styles.thead}>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr\r\n              className={styles.trHead}\r\n              {...headerGroup.getHeaderGroupProps()}\r\n            >\r\n              {headerGroup.headers.map((column) => (\r\n                <th className={styles.thHead} {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody className={styles.tBody} {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n\r\n            return (\r\n              <tr className={styles.trBody} {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td className={styles.tdBody} {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {isOpenActionsModal && (\r\n        <ActionsModal\r\n          isOpen={isOpenActionsModal}\r\n          onClose={closeModalActionsWord}\r\n          currentWordId={currentWordId}\r\n          currentWord={currentWord}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const selectAllWords = (state) => state.words.allWords;\r\n\r\nexport const selectCategories = (state) => state.words.categories;\r\n\r\nexport const selectStatistics = (state) => state.words.statistics;\r\n\r\nexport const selectUserWords = (state) => state.words.userWords;\r\n\r\nexport const isLoadingWords = (state) => state.words.isLoading;\r\n\r\nexport const selectIsModalAddWordOpen = (state) =>\r\n  state.words.isModalAddWordOpen;\r\n\r\nexport const selectTasks = (state) => state.words.tasks;\r\nexport const selectTasksCount = (state) => state.words.tasks.length;\r\n\r\nexport const selectTasksAnswers = (state) => state.words.tasksAnswers;\r\n"],"names":["AddWordForm","dispatch","useDispatch","categories","useSelector","selectCategories","_useState","useState","_useState2","_slicedToArray","selectedCategoryType","setSelectedCategoryType","_useState3","_useState4","selectedCategories","setSelectedCategories","_useState5","_useState6","selectedCategorie","setSelectedCategorie","_useState7","_useState8","isIrregular","setIsIrregular","_useState9","_useState10","en","setEn","_useState11","_useState12","ua","setUa","_useState13","_useState14","error","setError","_useState15","_useState16","isCategoriesOpen","setIsCategoriesOpen","useEffect","getCategories","_jsxs","onSubmit","e","preventDefault","enRegex","RegExp","uaRegex","test","newWordData","category","addNewWord","closeModalAddWord","message","code","children","className","styles","verbCategoriesWrp","filterBox","onClick","_jsx","type","filterBtn","MdKeyboardArrowUp","size","fill","MdKeyboardArrowDown","categoriesName","dropDowList","active","hidden","map","el","selectedCategory","nanoid","radioButtons","id","name","value","checked","onChange","htmlFor","radioInput","radioInputInfoMessage","errorMessageCategory","inputSet","addWordInputWrp","addWordInput","target","required","errorMessage","addWordLabel","src","ukraine","alt","addWordImg","united","addWordButtonsWrp","addWordButton","cancelButton","AddWordModal","isModalAddWordOpen","selectIsModalAddWordOpen","closeModal","currentTarget","document","addEventListener","removeEventListener","stopPropagation","RxCross2","color","Filters","_ref","handleSearchChange","searchQuery","isLoggedIn","getisAuth","location","useLocation","isSelectedCategories","selectedVerbCategory","setSelectedVerbCategory","setSelectedCategory","isDictionaryPage","pathname","hendleSelectCategory","getUserWords","getAllWords","handleVerbCategoryChange","filtersWrp","inputWrp","autoComplete","placeholder","FiSearch","inputSvg","getElementsByName","forEach","button","radioLabel","Dashboard","statistics","selectStatistics","totalCount","openModalAddWord","AiOutlinePlus","NavLink","to","BsArrowRight","WordsPagination","page","totalPages","onPageChange","pageNumbers","Array","from","length","_","index","MdOutlineKeyboardDoubleArrowLeft","MdOutlineKeyboardArrowLeft","concat","MdOutlineKeyboardArrowRight","MdOutlineKeyboardDoubleArrowRight","EditWordForm","onClose","currentWord","editWordData","_id","data","editWord","response","status","toast","defaultValue","EditWordModal","isOpen","ActionsModal","currentWordId","isOpenEditModal","setIsOpenEditModal","FiEdit2","deleteWord","then","payload","getStatistics","success","catch","FaRegTrashAlt","ProgressBar","Typography","variant","Math","round","CircularProgress","style","width","height","borderRadius","boxShadow","backgroundColor","thickness","WordsTable","ownWords","allWords","isOpenActionsModal","setIsOpenActionsModal","setCurrentWordId","setCurrentWord","handleActions","row","original","mobileHiddenCategory","window","innerWidth","columns","useMemo","Header","accessor","_toConsumableArray","Cell","_ref2","cell","_ref3","_ref4","addWordsById","handleAddToDictionary","dataRecomend","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","_objectSpread","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","selectAllWords","state","words","selectUserWords","userWords","isLoadingWords","isLoading","selectTasks","tasks","selectTasksCount","selectTasksAnswers","tasksAnswers"],"sourceRoot":""}